// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.Assortments
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TC_408877")]
    public partial class TC_408877Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TC_408877.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/Assortments", "TC_408877", "\tTest Case 408877", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("MD_ASSO_W_R_R80V1_0004")]
        [NUnit.Framework.CategoryAttribute("TC_408877")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        [NUnit.Framework.TestCaseAttribute("EC37065", "Customer", "MD_ASSO_W_R_R80V1_0004_1", "Valid", "d/m-1/y", "d/m+2/y", "MD_ASSO_W_R_R80V1_0004_2", "Pending", "d/m+3/y", "d/m+6/y", "MD_ASSO_W_R_R80V1_0004_3", "Canceled", "d/m+7/y", "d/m+10/y", "hierarchy", "d/m+4/y", "d/m+5/y", "d/m/y+1", "d/m/y+2", null)]
        public virtual void MD_ASSO_W_R_R80V1_0004(
                    string customerCode, 
                    string customerLevel, 
                    string assortmentDescription1, 
                    string status1, 
                    string beforeDate1, 
                    string afterDate1, 
                    string assortmentDescription2, 
                    string status2, 
                    string beforeDate2, 
                    string afterDate2, 
                    string assortmentDescription3, 
                    string status3, 
                    string beforeDate3, 
                    string afterDate3, 
                    string assortmentType, 
                    string beforeDate4, 
                    string afterDate4, 
                    string beforeDate5, 
                    string afterDate5, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TC_408877",
                    "SFA_Nightly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CustomerCode", customerCode);
            argumentsOfScenario.Add("CustomerLevel", customerLevel);
            argumentsOfScenario.Add("AssortmentDescription1", assortmentDescription1);
            argumentsOfScenario.Add("Status1", status1);
            argumentsOfScenario.Add("BeforeDate1", beforeDate1);
            argumentsOfScenario.Add("AfterDate1", afterDate1);
            argumentsOfScenario.Add("AssortmentDescription2", assortmentDescription2);
            argumentsOfScenario.Add("Status2", status2);
            argumentsOfScenario.Add("BeforeDate2", beforeDate2);
            argumentsOfScenario.Add("AfterDate2", afterDate2);
            argumentsOfScenario.Add("AssortmentDescription3", assortmentDescription3);
            argumentsOfScenario.Add("Status3", status3);
            argumentsOfScenario.Add("BeforeDate3", beforeDate3);
            argumentsOfScenario.Add("AfterDate3", afterDate3);
            argumentsOfScenario.Add("AssortmentType", assortmentType);
            argumentsOfScenario.Add("BeforeDate4", beforeDate4);
            argumentsOfScenario.Add("AfterDate4", afterDate4);
            argumentsOfScenario.Add("BeforeDate5", beforeDate5);
            argumentsOfScenario.Add("AfterDate5", afterDate5);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("MD_ASSO_W_R_R80V1_0004", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Assortments\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When(string.Format("the user creates a new assortment of Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', " +
                            "End: \'{3}\', Description: \'{4}\', Status: \'{5}\', Save: \'yes\'", assortmentType, customerCode, beforeDate1, afterDate1, assortmentDescription1, status1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.Then("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 10
 testRunner.When(string.Format("the user creates a new assortment of Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', " +
                            "End: \'{3}\', Description: \'{4}\', Status: \'{5}\', Save: \'yes\'", assortmentType, customerCode, beforeDate2, afterDate2, assortmentDescription2, status2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.Then("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 13
 testRunner.When(string.Format("the user creates a new assortment of Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', " +
                            "End: \'{3}\', Description: \'{4}\', Status: \'{5}\', Save: \'yes\'", assortmentType, customerCode, beforeDate3, afterDate3, assortmentDescription3, status3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
 testRunner.Then("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
 testRunner.When(string.Format("the user creates a new assortment Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', End" +
                            ": \'{3}\'", assortmentType, customerCode, beforeDate3, afterDate3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 17
 testRunner.Then("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 19
 testRunner.When(string.Format("the user creates a new assortment Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', End" +
                            ": \'{3}\'", assortmentType, customerCode, beforeDate4, afterDate4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
 testRunner.Then("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 22
 testRunner.When(string.Format("the user creates a new assortment Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', End" +
                            ": \'{3}\'", assortmentType, customerCode, beforeDate1, afterDate1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
 testRunner.Then("the user validates that the \'Warning\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.When("the user clicks on the \'No Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 26
 testRunner.Then("the user validates that the \'OK Button\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.When("the user clicks on the \'OK Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 29
 testRunner.Then("the user validates that the \'Warning\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.When("the user clicks on the \'Yes Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
 testRunner.Then("the user is on the \'General Info Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.When(string.Format("the user creates a new assortment Type: \'{0}\', Customer: \'{1}\', Start: \'{2}\', End" +
                            ": \'{3}\'", assortmentType, customerCode, beforeDate1, afterDate1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.Then("the user validates that the \'Warning\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.When("the user clicks on the \'No Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.Then("the user validates that the \'New Assortments Pop Up Menu\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 41
 testRunner.When(string.Format("the user selects validity period \'{0}\' \'{1}\' on the \'New Assortment Validity Peri" +
                            "od\' field", beforeDate5, afterDate5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.And("the user clicks on the \'OK Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.Then("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
