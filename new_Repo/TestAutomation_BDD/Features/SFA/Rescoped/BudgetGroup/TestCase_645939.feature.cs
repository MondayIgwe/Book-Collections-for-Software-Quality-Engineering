// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.BudgetGroup
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_645939")]
    public partial class TestCase_645939Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_645939.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/BudgetGroup", "TestCase_645939", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_SF_BUDGET_036_TRANSFER_POPUP_CONFIRMATION")]
        [NUnit.Framework.CategoryAttribute("BDD_645939")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        public virtual void WEB_SFA_SF_BUDGET_036_TRANSFER_POPUP_CONFIRMATION()
        {
            string[] tagsOfScenario = new string[] {
                    "BDD_645939",
                    "SFA_Nightly"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_SF_BUDGET_036_TRANSFER_POPUP_CONFIRMATION", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 5
 testRunner.Given("the user navigates to the \'Budget Group\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 6
 testRunner.When("the user adds a new budget group where Budget Group Code is retrieved, Topology: " +
                        "\'Discounts\', Description: \'WEB_SFA_SF_BUDGET_036\', Default Initial Value: \'1000\'" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 7
 testRunner.And("the user selects Budget Group Owners and retrieves the usernames: \'Anca Anastasie" +
                        "i, ANCA ANASTASIEI(MOBILE), Antonino Caridi\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Workflow\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Current status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("the user clicks on \'Radio Button\' with value \'Validate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.Then("the user closes the page and saves the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 16
 testRunner.When("the user filters the column by column name \'Code\', \'Like\' retrieved value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 18
 testRunner.And("the user clicks on \'Div Text in Grid\' with value \'Discounts\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user clicks on the \'Links Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user clicks on \'Text\' with value \'Budget Detail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("the user clicks on \'Contains Div Text in Grid\' with value \'User0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user clicks on \'Button Link\' with value \'Transfer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user clicks on the \'Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.And("the user opens the \'Budget detail\' pop-up Grid Settongs Menu option: \'Columns\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("the user filter the pop up menu: \'Columns Settings\' by column name \'Caption\', \'Li" +
                        "ke\', \'Budget group code\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("the user clicks on \'Columns Settings\' pop up table where \'Caption\' column has the" +
                        " value:\'Budget group code\' and the checkbox is in column:\'Visible\' is turned:\'on" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Columns Settings\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("the user filters the pop up menu: \'Budget detail\' by column name \'Budget group co" +
                        "de\', \'Like\', retieved value", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user clicks on \'Select Row Checkbox\' with value one \'Budget detail\' and value" +
                        " two \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user clicks on \'Select Row Checkbox\' with value one \'Budget detail\' and value" +
                        " two \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Budget detail\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.Then("the user validates that the \'Div Text in Grid\' with value \'User1\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 39
 testRunner.And("the user validates that the \'Div Text in Grid\' with value \'User2\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Remaining balance\' has " +
                        "text \'1000.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.When("the user clicks and enters the text \'200\' in the \'Budget Transfer Budget Destinat" +
                        "ion\' multigrid table in the \'\' column name: \'Transfer value\' in row number: \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
 testRunner.And("the user moves the focus to \'Input By Label Name\' with value \'Remaining balance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Remaining balance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("the user clicks and enters the text \'100\' in the \'Budget Transfer Budget Destinat" +
                        "ion\' multigrid table in the \'\' column name: \'Transfer value\' in row number: \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user moves the focus to \'Input By Label Name\' with value \'Remaining balance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Remaining balance\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.Then("the user validates that the \'Budget Transfer Budget Destination\' singlegrid conta" +
                        "ins \'1,200.00\' in the \'New balance\' column in the row number \'1\' with an offset " +
                        "of \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
 testRunner.And("the user validates that the \'Budget Transfer Budget Destination\' singlegrid conta" +
                        "ins \'1,100.00\' in the \'New balance\' column in the row number \'2\' with an offset " +
                        "of \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Remaining balance\' has " +
                        "text \'700.00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.When("the user clicks on \'Popup Ok Button\' with value \'Budget Transfer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
 testRunner.Then("the user validates that the \'Toast Message Field\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.And("the user validates that \'Selected Index Row\' with value \'1\' is marked as: \'true\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.When("the user clicks on the \'Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.Then("the user validates that the \'Basic Multigrid\' multigrid has the value \'700.00\' in" +
                        " the \'Assigned Value\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 61
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'1,200.00\' " +
                        "in the \'Assigned Value\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'1,100.00\' " +
                        "in the \'Assigned Value\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'700.00\' in" +
                        " the \'Balance\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'1,200.00\' " +
                        "in the \'Balance\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'1,100.00\' " +
                        "in the \'Balance\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.When("the user clicks on \'Contains Div Text in Grid\' with value \'User0\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 69
 testRunner.And("the user clicks on the \'Links Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.And("the user clicks on \'Text\' with value \'Budget Movements\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.Then("the user is on the \'Budget Movements\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Manual mov" +
                        "ement\' in the \'Operation Type\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Manual mov" +
                        "ement\' in the \'Operation Type\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Initializa" +
                        "tion\' in the \'Operation Type\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'-200.00\' i" +
                        "n the \'Operation Value\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'-100.00\' i" +
                        "n the \'Operation Value\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'1,000.00\' " +
                        "in the \'Operation Value\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'\' in the \'" +
                        "Dockey\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'\' in the \'" +
                        "Dockey\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'\' in the \'" +
                        "Dockey\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.When("the user clicks on the \'Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 89
 testRunner.And("the user keys in the \'shift\' key", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And("the user clicks on \'Contains Div Text in Grid\' with value \'User1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.And("the user clicks on \'Contains Div Text in Grid\' with value \'User2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And("the user keys out the \'shift\' key", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.And("the user clicks on the \'Links Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And("the user clicks on \'Text\' with value \'Budget Movements\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.Then("the user is on the \'Budget Movements\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 98
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Manual mov" +
                        "ement\' in the \'Operation Type\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Manual mov" +
                        "ement\' in the \'Operation Type\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Initializa" +
                        "tion\' in the \'Operation Type\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'Initializa" +
                        "tion\' in the \'Operation Type\' column in the row number \'4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'200.00\' in" +
                        " the \'Operation Value\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid has the value \'100.00\' in" +
                        " the \'Operation Value\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid contains the date value \'" +
                        "d/m/y\' in the \'Operation Date\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid contains the username cur" +
                        "rently logged in in the \'Made By\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid contains the username cur" +
                        "rently logged in in the \'Made By\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid contains the username cur" +
                        "rently logged in in the \'Made By\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 111
 testRunner.And("the user validates that the \'Basic Multigrid\' multigrid contains the username cur" +
                        "rently logged in in the \'Made By\' column in the row number \'4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 115
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
