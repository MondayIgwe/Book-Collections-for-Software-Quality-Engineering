// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.AdvancedPricing
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_523670")]
    public partial class TestCase_523670Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_523670.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/AdvancedPricing", "TestCase_523670", "\tCreate a new Advanced pricing action using the specified data", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("523670_WEB_SFA_SF_CNVACT_080_Messages are cleared when Leaf/ Benefit node are ins" +
            "erted in the trees")]
        [NUnit.Framework.CategoryAttribute("mytag")]
        [NUnit.Framework.TestCaseAttribute("29 - JHN", "Discretionary", "Number of times", "Canvass for WEB_SFA_SF_CNVACT_080", "B2B", "AND", "Order Row", "QTYORD - Quantity", "10.00", "CT - CARTONS", "MULTIPLE", "Product", "CODBRAND - Brand", "2.00", "Cannot save because there is an empty basket in Main constraints", "Cannot save because there is an empty basket in Valorization", "Cannot save because benefit is missing", "50.00", "Thresholds - Number of times 50", "Ben1", "Group Ben1 - Cost 50 - Max Number of Times 0", "3 - % Discount on Order Row", "10.00", "Channel Discount", "By Formats", "Sum - Order Row - Quantity >= 10 CARTONS", "AND", "Order Row", "GROSSAMOUNT - Gross Amount", "100.00", "Count Distinct - Product - Brand = 2", null)]
        public virtual void _523670_WEB_SFA_SF_CNVACT_080_MessagesAreClearedWhenLeafBenefitNodeAreInsertedInTheTrees(
                    string cnvBook, 
                    string coddiscr, 
                    string valTypeValue, 
                    string cnvDescription, 
                    string customerCategory, 
                    string and1, 
                    string object1, 
                    string attribute1, 
                    string value1, 
                    string uM1, 
                    string multiple, 
                    string object3, 
                    string attribute3, 
                    string value3, 
                    string errMsg1, 
                    string errMsg2, 
                    string errMsg3, 
                    string threshold1, 
                    string thresholdNode, 
                    string description1, 
                    string groupNode, 
                    string benefitType, 
                    string benefitValue, 
                    string benefitReaseon, 
                    string benefitSubReason, 
                    string basket1, 
                    string and2, 
                    string object2, 
                    string attribute2, 
                    string value2, 
                    string basket3, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "mytag"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CnvBook", cnvBook);
            argumentsOfScenario.Add("Coddiscr", coddiscr);
            argumentsOfScenario.Add("ValTypeValue", valTypeValue);
            argumentsOfScenario.Add("CnvDescription", cnvDescription);
            argumentsOfScenario.Add("CustomerCategory", customerCategory);
            argumentsOfScenario.Add("And1", and1);
            argumentsOfScenario.Add("Object1", object1);
            argumentsOfScenario.Add("Attribute1", attribute1);
            argumentsOfScenario.Add("Value1", value1);
            argumentsOfScenario.Add("UM1", uM1);
            argumentsOfScenario.Add("Multiple", multiple);
            argumentsOfScenario.Add("Object3", object3);
            argumentsOfScenario.Add("Attribute3", attribute3);
            argumentsOfScenario.Add("Value3", value3);
            argumentsOfScenario.Add("ErrMsg1", errMsg1);
            argumentsOfScenario.Add("ErrMsg2", errMsg2);
            argumentsOfScenario.Add("ErrMsg3", errMsg3);
            argumentsOfScenario.Add("Threshold1", threshold1);
            argumentsOfScenario.Add("ThresholdNode", thresholdNode);
            argumentsOfScenario.Add("Description1", description1);
            argumentsOfScenario.Add("groupNode", groupNode);
            argumentsOfScenario.Add("BenefitType", benefitType);
            argumentsOfScenario.Add("BenefitValue", benefitValue);
            argumentsOfScenario.Add("BenefitReaseon", benefitReaseon);
            argumentsOfScenario.Add("BenefitSubReason", benefitSubReason);
            argumentsOfScenario.Add("Basket1", basket1);
            argumentsOfScenario.Add("And2", and2);
            argumentsOfScenario.Add("Object2", object2);
            argumentsOfScenario.Add("Attribute2", attribute2);
            argumentsOfScenario.Add("Value2", value2);
            argumentsOfScenario.Add("Basket3", basket3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("523670_WEB_SFA_SF_CNVACT_080_Messages are cleared when Leaf/ Benefit node are ins" +
                    "erted in the trees", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("the user is on the \'Advanced Pricing Actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 9
 testRunner.When("the user clicks on the \'Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.Then("the user validates that the \'Advanced Pricing Action Pop Up Menu\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 11
 testRunner.When("the user clicks on the \'Advanced Pricing Action Generate Code Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 12
 testRunner.And("the user clicks on the \'Advanced Pricing Book Drop Down\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Advanced Pricing Book Option\'", cnvBook), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("the user clicks on the \'Application Type Drop Down\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Application Type Option\'", coddiscr), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("the user clicks on the \'Valorization Type Drop Down\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Valorization Type Option\'", valTypeValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("the user clicks OK button in the \'New Advanced Pricing Action\' popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.Then("the user is on the \'General Info Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 21
 testRunner.When(string.Format("the user enters \'{0}\' in the \'Description Text Area\'", cnvDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 22
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.When("the user clicks on the \'Side Panel Tab;Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then("the user is on the \'Customers Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 26
 testRunner.And("the user clicks on the \'Customers Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.And("the user clicks on the \'Add Customer Rules Drop Down Menu;CUSTOMER CATEGORY\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And(string.Format("the user clicks on the \'Add Customer Rules Drop Down Menu Option;{0}\'", customerCategory), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("the user clicks on the \'Drop Down Menu OK Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("the user clicks OK button in the \'Add Customer Rules\' popup", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.When("the user clicks on the \'Sub Tab;Customer Simulation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.When("the user clicks on the \'Side Panel Tab;Main constraints\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 35
 testRunner.Then("the user is on the \'Main Constraints Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.And(string.Format("the user clicks on the \'Node;{0}\'", and1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.Then("the user clicks on the \'Add Basket\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.When("the \'Basket Contraint Pop Up Menu\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.And("the user clicks on the \'Object Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Object\'", object1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("the user clicks on the \'Attribute Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Attribute\'", attribute1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And(string.Format("the user enters \'{0}\' in the \'Value Field\'", value1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user clicks on the \'Measure Unit Type Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Measure Unit Type\'", uM1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.Then("the user clicks on the \'Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 51
 testRunner.When("the user clicks on the \'Side Panel Tab;Valorization\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.Then("the user is on the \'Valorization Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.And(string.Format("the user clicks on the \'Node;{0}\'", multiple), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.Then("the user clicks on the \'Add Basket\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.When("the \'Basket Contraint Pop Up Menu\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.And("the user clicks on the \'Object Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Object\'", object3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("the user clicks on the \'Attribute Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Attribute\'", attribute3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And(string.Format("the user enters \'{0}\' in the \'Value Field\'", value3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.Then("the user clicks on the \'Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 65
 testRunner.When("the user clicks on the \'Side Panel Tab;General info\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.Then("the user is on the \'General Info Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.When("the user clicks on the \'Toolbar Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 70
 testRunner.Then("the user is on the \'Main Constraints Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 71
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'visible\'", errMsg1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'visible\'", errMsg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'visible\'", errMsg3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.When("the user clicks on the \'Side Panel Tab;Benefits\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 81
 testRunner.Then("the user is on the \'Benefits Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.When("the user clicks on the \'Sub Tab;Benefit brackets\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 83
 testRunner.When("the user clicks on the \'Benefits Brackets Threshold Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 84
 testRunner.And(string.Format("the user enters \'{0}\' in the \'Number of times Field\'", threshold1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.Then("the user clicks on the \'Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.When(string.Format("the user clicks on the \'Node;{0}\'", thresholdNode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
 testRunner.Then("the user clicks on the \'Benefits Brackets Benefit Group Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.And(string.Format("the user enters \'{0}\' in the \'New Benefit Group Description Text Area\'", description1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.Then("the user clicks on the \'Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.When(string.Format("the user clicks on the \'Node;{0}\'", groupNode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.Then("the user clicks on the \'Benefits Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.Then("the \'Benefit pop up menu\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 101
 testRunner.When("the user clicks on the \'Benefit Type drop down menu\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 102
 testRunner.And(string.Format("the user clicks on the \'Benefit Type;{0}\'", benefitType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.When(string.Format("the user enters \'{0}\' in the \'Benefit field\'", benefitValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 104
 testRunner.When("the user clicks on the \'Benefit Reason Down Menu\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 105
 testRunner.And(string.Format("the user clicks on the \'Benefit Reason;{0}\'", benefitReaseon), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
 testRunner.When("the user clicks on the \'Benefit Sub Reason Down Menu\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 107
 testRunner.And(string.Format("the user clicks on the \'Benefit Sub Reason;{0}\'", benefitSubReason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.Then("the user clicks on the \'Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'visible\'", errMsg1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 112
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'visible\'", errMsg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'cleared\'", errMsg3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 116
 testRunner.When("the user clicks on the \'Side Panel Tab;Main constraints\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 117
 testRunner.Then("the user is on the \'Main Constraints Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.And(string.Format("the user clicks on the \'Node;{0} -> {1}\'", and1, basket1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
 testRunner.And("the user clicks on the \'AND Toolbar Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
 testRunner.And(string.Format("the user clicks on the \'Node;{0} -> {1} -> {2}\'", and1, basket1, and2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
 testRunner.And("the user clicks on the \'Add Leaf\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.Then("the \'Leaf Contraint Pop Up Menu\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 123
 testRunner.And("the user clicks on the \'Object Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Object\'", object2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.And("the user clicks on the \'Attribute Field\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Select Attribute\'", attribute2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.And(string.Format("the user enters \'{0}\' in the \'Value Field\'", value2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.Then("the user clicks on the \'Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'visible\'", errMsg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 133
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'cleared\'", errMsg1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 136
 testRunner.When("the user clicks on the \'Side Panel Tab;Valorization\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 137
 testRunner.Then("the user is on the \'Valorization Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 138
 testRunner.And(string.Format("the user clicks on the \'Node;{0} -> {1}\'", multiple, basket3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 139
 testRunner.Then("the user clicks on the \'Remove Toolbar Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 140
 testRunner.Then("the user clicks on the \'Warning popup Yes Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 141
 testRunner.And(string.Format("the user validates that the Toolbar Error message \'{0}\' is \'cleared\'", errMsg2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.Then("the user clicks on the \'Toolbar Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
