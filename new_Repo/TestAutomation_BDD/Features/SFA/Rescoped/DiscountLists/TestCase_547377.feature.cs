// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.DiscountLists
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_547377")]
    public partial class TestCase_547377Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_547377.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/DiscountLists", "TestCase_547377", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_SF_DISCOUNTLIST_006_CHECK_WORKFLOW_TRANSITIONS")]
        [NUnit.Framework.CategoryAttribute("BDD_547377")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        [NUnit.Framework.TestCaseAttribute("WEB_SFA_SF_DISCOUNTLIST_006_10", "EC5266", "Level 0", "Discount list Autom 541636", "BEVERAGE SHOP", "Validate", "Suspend", "Cancel", "Validation Error", "Cannot save the current discount list because no product attribute rules are defi" +
            "ned", "WINE", "18.00", "Draft", "Valid", "Suspended", "Cancelled", "Change Status", "Transition successfully occured.", "No available transitions", "Discount lists", "by hierarchy and customer attributes", "On demand", "", null)]
        public virtual void WEB_SFA_SF_DISCOUNTLIST_006_CHECK_WORKFLOW_TRANSITIONS(
                    string listCode1, 
                    string customer1, 
                    string level1, 
                    string listDescription1, 
                    string salesAreaValue, 
                    string changeStatusList, 
                    string changeStatusList2, 
                    string changeStatusList3, 
                    string eRRORMSG, 
                    string eRRORMSG_UI, 
                    string prodlineValue, 
                    string initialValue, 
                    string currentStatusList, 
                    string currentStatusList2, 
                    string currentStatusList3, 
                    string currentStatusList4, 
                    string changeStatusPopup, 
                    string successMsg, 
                    string message, 
                    string navigator, 
                    string type, 
                    string applicationType, 
                    string enableBrackets, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_547377",
                    "SFA_Nightly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ListCode1", listCode1);
            argumentsOfScenario.Add("Customer1", customer1);
            argumentsOfScenario.Add("Level1", level1);
            argumentsOfScenario.Add("ListDescription1", listDescription1);
            argumentsOfScenario.Add("SalesAreaValue", salesAreaValue);
            argumentsOfScenario.Add("ChangeStatusList", changeStatusList);
            argumentsOfScenario.Add("ChangeStatusList2", changeStatusList2);
            argumentsOfScenario.Add("ChangeStatusList3", changeStatusList3);
            argumentsOfScenario.Add("ERRORMSG", eRRORMSG);
            argumentsOfScenario.Add("ERRORMSG_UI", eRRORMSG_UI);
            argumentsOfScenario.Add("ProdlineValue", prodlineValue);
            argumentsOfScenario.Add("InitialValue", initialValue);
            argumentsOfScenario.Add("CurrentStatusList", currentStatusList);
            argumentsOfScenario.Add("CurrentStatusList2", currentStatusList2);
            argumentsOfScenario.Add("CurrentStatusList3", currentStatusList3);
            argumentsOfScenario.Add("CurrentStatusList4", currentStatusList4);
            argumentsOfScenario.Add("ChangeStatusPopup", changeStatusPopup);
            argumentsOfScenario.Add("SuccessMsg", successMsg);
            argumentsOfScenario.Add("Message", message);
            argumentsOfScenario.Add("navigator", navigator);
            argumentsOfScenario.Add("Type", type);
            argumentsOfScenario.Add("ApplicationType", applicationType);
            argumentsOfScenario.Add("EnableBrackets", enableBrackets);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_SF_DISCOUNTLIST_006_CHECK_WORKFLOW_TRANSITIONS", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Discount lists\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When(string.Format("the user adds a new Discount List where Type:\'{0}\', Code: \'{1}\', Customer Level: " +
                            "\'{2}\' ,Customer Code: \'{3}\', Application Type: \'{4}\',  Enable Brackets: \'{5}\'", type, listCode1, level1, customer1, applicationType, enableBrackets), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'List Description" +
                            "\'", listDescription1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And("the user clicks on \'Button\' with value \'Save\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("the user clicks on \'Top Tab\' with value \'Customer Attributes\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("the user clicks on \'Top Tab\' with value \'Inclusion Rules (0)\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("the user clicks on the \'Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And(string.Format("the user selects from the \'Sales Area\' drop down grid menu the \'{0}\' option", salesAreaValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Workflow\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And(string.Format("the user changes the status to \'{0}\'", changeStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Status feedback\' has te" +
                            "xt \'{0}\'", eRRORMSG), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.When("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.Then(string.Format("\'Main Toolbar Error Message Field\' text contains \'{0}\'", eRRORMSG_UI), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
 testRunner.When("the user clicks on \'Side Panel Tab\' with value \'Discount Rules\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 28
 testRunner.And("the user clicks on the \'Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And(string.Format("the user selects from the \'Product line\' drop down grid menu the \'{0}\' option", prodlineValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Initial Euro/Pri" +
                            "ces\'", initialValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Workflow\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Current status\' has tex" +
                            "t \'{0}\'", currentStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Notes\' is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Feedback\' is disabl" +
                        "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("the user validates that the \'Top Tab\' with value \'Anomalies\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user validates that the \'Top Tab\' with value \'History\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Current status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 42
 testRunner.Then(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is displayed", changeStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is displayed", changeStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.When(string.Format("the user clicks on \'Radio Button\' with value \'{0}\'", changeStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.And("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Current status\' has tex" +
                            "t \'{0}\'", currentStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.When(string.Format("the user changes the status to \'{0}\'", changeStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Current status\' has tex" +
                            "t \'{0}\'", currentStatusList2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 53
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'Feedback\' has text \'{0}" +
                            "\'", successMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Current status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.Then(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is displayed", changeStatusList2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.And(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is displayed", changeStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.When("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 60
 testRunner.And(string.Format("the user changes the status to \'{0}\'", changeStatusList2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Current status\' has tex" +
                            "t \'{0}\'", currentStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'Feedback\' has text \'{0}" +
                            "\'", successMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Current status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 66
 testRunner.Then(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is displayed", changeStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.And(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is displayed", changeStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.When("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 70
 testRunner.And(string.Format("the user changes the status to \'{0}\'", changeStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Current status\' has tex" +
                            "t \'{0}\'", currentStatusList4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 73
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'Feedback\' has text \'{0}" +
                            "\'", successMsg), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Current status\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 77
 testRunner.Then(string.Format("the user validates that the \'Text\' with value \'{0}\' is present", message), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.And(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is not present", changeStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is not present", changeStatusList2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.And(string.Format("the user validates that the \'Radio Button\' with value \'{0}\' is not present", changeStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.When("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 83
 testRunner.And("the user clicks on \'Top Tab\' with value \'History\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.Then(string.Format("the user validates that the \'Text In Table Cell\' with value \'{0}\' is present", currentStatusList), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 85
 testRunner.And(string.Format("the user validates that the \'Text In Table Cell\' with value \'{0}\' is present", currentStatusList2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And(string.Format("the user validates that the \'Text In Table Cell\' with value \'{0}\' is present", currentStatusList3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And(string.Format("the user validates that the \'Text In Table Cell\' with value \'{0}\' is present", currentStatusList4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
