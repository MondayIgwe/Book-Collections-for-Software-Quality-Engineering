// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.CustomerMaster
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_534986")]
    public partial class TestCase_534986Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_534986.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/CustomerMaster", "TestCase_534986", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_MD_CUST_UI_017_DELIVERY_TAB")]
        [NUnit.Framework.CategoryAttribute("BDD_534986")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        [NUnit.Framework.TestCaseAttribute("New customer", "Bill-to, Ship-to and POS", "United States of America", "US17", "CUST_UI_017", "Strada Palat", "44", "EC86173", "123", "Ship to and point of Sales", "EC10359", "VAT Number", "Customer Code", "Name", "CODVAT", "Austria", "Euro", "IMMEDIATE INVOICE", "SOCIETY", "VIA SALES REP", "s", "60 DAYS FROM INVOICE DATE", "VAT", "1000.00", "1000.00", "1000.00", "1000.00", "0.00", null)]
        public virtual void WEB_SFA_MD_CUST_UI_017_DELIVERY_TAB(
                    string customerAction1, 
                    string customerType, 
                    string nation, 
                    string vATCode, 
                    string customerName, 
                    string address, 
                    string numberOfTransportDays, 
                    string codParty, 
                    string vatExemp, 
                    string shipToPos, 
                    string billTo, 
                    string captionVatNumber, 
                    string custCodeColumn, 
                    string nameColumn, 
                    string vatColumnAM1, 
                    string country, 
                    string cur, 
                    string invMode, 
                    string jubMode, 
                    string payType, 
                    string iBAN, 
                    string payTerm, 
                    string varReg, 
                    string valCredit, 
                    string valOrdered, 
                    string valMatured, 
                    string valExposed, 
                    string avgDaysPayretard, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_534986",
                    "SFA_Nightly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CustomerAction1", customerAction1);
            argumentsOfScenario.Add("CustomerType", customerType);
            argumentsOfScenario.Add("Nation", nation);
            argumentsOfScenario.Add("VATCode", vATCode);
            argumentsOfScenario.Add("CustomerName", customerName);
            argumentsOfScenario.Add("Address", address);
            argumentsOfScenario.Add("NumberOfTransportDays", numberOfTransportDays);
            argumentsOfScenario.Add("CodParty", codParty);
            argumentsOfScenario.Add("VatExemp", vatExemp);
            argumentsOfScenario.Add("ShipToPos", shipToPos);
            argumentsOfScenario.Add("BillTo", billTo);
            argumentsOfScenario.Add("CaptionVatNumber", captionVatNumber);
            argumentsOfScenario.Add("CustCodeColumn", custCodeColumn);
            argumentsOfScenario.Add("NameColumn", nameColumn);
            argumentsOfScenario.Add("VatColumnAM1", vatColumnAM1);
            argumentsOfScenario.Add("Country", country);
            argumentsOfScenario.Add("Cur", cur);
            argumentsOfScenario.Add("InvMode", invMode);
            argumentsOfScenario.Add("JubMode", jubMode);
            argumentsOfScenario.Add("PayType", payType);
            argumentsOfScenario.Add("IBAN", iBAN);
            argumentsOfScenario.Add("PayTerm", payTerm);
            argumentsOfScenario.Add("VarReg", varReg);
            argumentsOfScenario.Add("ValCredit", valCredit);
            argumentsOfScenario.Add("ValOrdered", valOrdered);
            argumentsOfScenario.Add("ValMatured", valMatured);
            argumentsOfScenario.Add("ValExposed", valExposed);
            argumentsOfScenario.Add("AvgDaysPayretard", avgDaysPayretard);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_MD_CUST_UI_017_DELIVERY_TAB", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("the user navigates to the \'Customer Master\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When(string.Format("the user adds a new Customer Master where Action: \'{0}\', Customer Type: \'{1}\', Na" +
                            "tion: \'{2}\', VAT Code: \'{3}\'", customerAction1, customerType, nation, vATCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.And("the user clicks on \'Top Tab\' with value \'Main\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Customer Name\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Customer Name\'", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Address\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Address\'", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user clicks on \'Top Tab\' with value \'Invoice\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.Then("the user validates that the \'Mandatory Icon\' with value \'Invoicing Code\' is displ" +
                        "ayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 23
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Bill To Customer\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Currency code\' is not di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Invoicing Mode\' is not d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Juridical nature\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Payment Type\' is not dis" +
                        "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Supplier Code 1\' is not " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'VAT Exemption Start Date" +
                        "\' is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'VAT exemption\' is not di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Invoicing Code\' is " +
                        "disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bill To Customer\' i" +
                        "s disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Currency code\' is e" +
                        "nabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Invoicing Mode\' is " +
                        "enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Juridical nature\' i" +
                        "s enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Payment Type\' is en" +
                        "abled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Supplier Code 1\' is" +
                        " enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Exemption Start" +
                        " Date\' is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT exemption\' is e" +
                        "nabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Invoicing Code\' is " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bill To Customer\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Currency code\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Invoicing Mode\' is " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Juridical nature\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Payment Type\' is di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Supplier Code 1\' is" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Exemption Start" +
                        " Date\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT exemption\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'IBAN Code\' is not displa" +
                        "yed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Bank\' is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Bank Branch\' is not disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Payment Terms\' is not di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'VAT Regime\' is not displ" +
                        "ayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'IBAN Code\' is enabl" +
                        "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bank\' is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bank Branch\' is ena" +
                        "bled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Payment Terms\' is e" +
                        "nabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Regime\' is enab" +
                        "led", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'IBAN Code\' is displ" +
                        "ayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bank\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bank Branch\' is dis" +
                        "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Payment Terms\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Regime\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'VAT Number\' is not displ" +
                        "ayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Credit Amount\' is not di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Date of Credit Modificat" +
                        "ion\' is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Orders to be shipped\' is" +
                        " not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Not Expired Amount\' is n" +
                        "ot displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Expired Amount\' is not d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Total Due Amount\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Controversy Code\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Controversy Date\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Delayed payment - Avg da" +
                        "ys\' is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Number\' is disa" +
                        "bled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Credit Amount\' is d" +
                        "isabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Date of Credit Modi" +
                        "fication\' is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Orders to be shippe" +
                        "d\' is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Not Expired Amount\'" +
                        " is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Expired Amount\' is " +
                        "disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Due Amount\' i" +
                        "s disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Controversy Code\' i" +
                        "s disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Controversy Date\' i" +
                        "s disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Delayed payment - A" +
                        "vg days\' is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Number\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Credit Amount\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Date of Credit Modi" +
                        "fication\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 111
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Orders to be shippe" +
                        "d\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 112
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Not Expired Amount\'" +
                        " is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Expired Amount\' is " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Due Amount\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 115
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Controversy Code\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 116
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Controversy Date\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 117
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Delayed payment - A" +
                        "vg days\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Supplier Code 1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 121
 testRunner.And(string.Format("the user clicks on \'{0}\' text on the grid", codParty), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And("the user clicks on \'Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.When("the user enters the characters \'d+5/m/y\' in field \'Input By Label Name\' with valu" +
                        "e \'VAT Exemption Start Date\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 126
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.When(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'VAT exemption\'", vatExemp), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 130
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And("the user clicks on \'Button\' with value \'Save\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 132
 testRunner.Then("the user validates that the \'Toast Message Field\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 133
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 136
 testRunner.Then(string.Format("the user validates that the \'Grid Filter\' with value \'{0}\' is visible", captionVatNumber), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 139
 testRunner.When(string.Format("the user adds a new Customer Master where Action: \'{0}\', Customer Type: \'{1}\', Bi" +
                            "ll-To: \'{2}\'", customerAction1, shipToPos, billTo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 140
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Customer Name\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Customer Name\'", customerName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Address\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 143
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Address\'", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 144
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Country\'", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 150
 testRunner.And("the user clicks on \'Top Tab\' with value \'Invoice\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 152
 testRunner.Then("the user validates that \'Invoicing Code\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 153
 testRunner.And("the user validates that \'Bill To Customer\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 154
 testRunner.And("the user validates that \'Currency code\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.And("the user validates that \'Invoicing Mode\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 156
 testRunner.And("the user validates that \'Juridical nature\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 157
 testRunner.And("the user validates that \'Payment Type\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 158
 testRunner.And("the user validates that \'Supplier Code 1\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And("the user validates that \'VAT Exemption Start Date\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 160
 testRunner.And("the user validates that \'VAT exemption\' is read-only", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 164
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Invoicing Code\' is " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Bill To Customer\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 166
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Currency code\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 167
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Invoicing Mode\' is " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 168
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Juridical nature\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 169
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Payment Type\' is di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'IBAN Code\' is displ" +
                        "ayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Payment Terms\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Regime\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 183
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'VAT Number\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 184
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Credit Amount\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 185
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Orders to be shippe" +
                        "d\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 186
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Not Expired Amount\'" +
                        " is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 187
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Expired Amount\' is " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 188
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Due Amount\' i" +
                        "s displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 189
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Delayed payment - A" +
                        "vg days\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 191
 testRunner.And("the user clicks on \'Button\' with value \'Save\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 192
 testRunner.Then("the user validates that the \'Toast Message Field\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 193
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
