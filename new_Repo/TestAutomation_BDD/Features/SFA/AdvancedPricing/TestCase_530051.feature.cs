// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.AdvancedPricing
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_530051")]
    public partial class TestCase_530051Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_530051.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/AdvancedPricing", "TestCase_530051", "\tAutomatic validations when set Target discount True", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("530051_WEB_SFA_SF_CNVACT_095_Automatic_validations_when_set_Target_discount_true")]
        [NUnit.Framework.CategoryAttribute("BDD_530051")]
        [NUnit.Framework.CategoryAttribute("SFA_Weekly")]
        [NUnit.Framework.TestCaseAttribute("Thresholds - Quantity 120 CARTONS", "Group Benefit for WEB_SFA_SF_CNVACT_095 - Cost 120 - Max Number of Times 0", "EUR - Euro", "Brand Discount", "Row TAX - 10 Euro", "Amount discount on Order Head - 7 Euro", null)]
        public virtual void _530051_WEB_SFA_SF_CNVACT_095_Automatic_Validations_When_Set_Target_Discount_True(string thresholdNode1, string benefitGroupNode1, string benUmValue, string benSubReason, string benefitNode1, string benefitNode2, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_530051",
                    "SFA_Weekly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("ThresholdNode1", thresholdNode1);
            argumentsOfScenario.Add("BenefitGroupNode1", benefitGroupNode1);
            argumentsOfScenario.Add("BenUmValue", benUmValue);
            argumentsOfScenario.Add("BenSubReason", benSubReason);
            argumentsOfScenario.Add("BenefitNode1", benefitNode1);
            argumentsOfScenario.Add("BenefitNode2", benefitNode2);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("530051_WEB_SFA_SF_CNVACT_095_Automatic_validations_when_set_Target_discount_true", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Advanced Pricing Actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When("the user adds a new Advanced Pricing Action with Advanced Pricing Book: \'29 - JHN" +
                        "\', Application Type: \'Discretionary\', Valorization Type: \'Quantity\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.Then("the user validates that the \'Side Panel Tab\' with value \'General info\' is display" +
                        "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 10
 testRunner.When("the user enters \'Canvass for WEB_SFA_SF_CNVACT_095\' in field \'Input By Label Name" +
                        "\' with value \'Description\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Valorization Type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("the user select value \'Quantity\' from dropdown list \'Generic Drop Down Trigger\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Measure Unit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("the user select value \'CARTONS\' from dropdown list \'Generic Drop Down Trigger\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.Then("the user clicks on \'Side Panel Tab\' with value \'Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.And("the user validates that the \'Side Panel Tab\' with value \'Customers\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.When("the user clicks on the \'Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 20
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Customer Category\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user clicks on \'Dropdown Panel Checkbox\' with value \'B2B\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("the user clicks on \'Dropdown Panel Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.Then("the user validates that the \'Side Panel Tab\' with value \'Customers\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.And("the user clicks on \'Top Tab\' with value \'Customer Simulation\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.When("the user clicks on \'Side Panel Tab\' with value \'Benefits\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 29
 testRunner.Then("the user validates that the \'Side Panel Tab\' with value \'Benefits\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
 testRunner.When("the user clicks on \'Top Tab\' with value \'Benefit brackets\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 31
 testRunner.And("the user clicks on \'Button Link\' with value \'Threshold\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.Then("the user validates that the \'Input By Label Name\' with value \'CARTONS - Quantity\'" +
                        " is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 33
 testRunner.When("the user enters \'120.00\' in field \'Input By Label Name\' with value \'CARTONS - Qua" +
                        "ntity\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 34
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.Then(string.Format("the user validates that the \'Node\' with value \'{0}\' is visible", thresholdNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 39
 testRunner.When(string.Format("the user clicks on the hierarchical node with the value \'{0}\'", thresholdNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 40
 testRunner.And("the user clicks on \'Button Link\' with value \'Benefit Group\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.Then("the user validates that the \'Popup Title\' with value \'Description\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 42
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Value of the group\'" +
                        " is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.When("the user enters \'Benefit for WEB_SFA_SF_CNVACT_095\' in the \'Benefit Group Descrip" +
                        "tion\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 45
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.Then(string.Format("the user validates that the \'Node\' with value \'{0}\' is visible", benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.And(string.Format("the user validates that the hierarchical node with value \'{0}\' -> \'{1}\' is visibl" +
                            "e", thresholdNode1, benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.When(string.Format("the user clicks on the hierarchical node with the value \'{0}\'", benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 52
 testRunner.And("the user clicks on \'Button Link\' with value \'Benefit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.Then("the user validates that the \'Popup Title\' with value \'Benefit\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.When("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
 testRunner.Then("the user validates that the \'Input By Label Name\' with value \'Benefit type\' is vi" +
                        "sible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Benefit\' is visible" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.And("the user select value \'11 - Row TAX\' from dropdown list \'Generic Drop Down Trigge" +
                        "r\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("the user enters \'10.00\' in field \'Input By Label Name\' with value \'Benefit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit Um.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Generic Drop Down Trigger\'", benUmValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit sub-reason\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 63
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Generic Drop Down Trigger\'", benSubReason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.Then(string.Format("the user validates that the hierarchical node with value \'{0}\' -> \'{1}\' -> \'{2}\' " +
                            "is visible", thresholdNode1, benefitGroupNode1, benefitNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.When(string.Format("the user clicks on the hierarchical node with the value \'{0}\'", benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 70
 testRunner.And("the user clicks on \'Button Link\' with value \'Benefit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.Then("the user validates that the \'Popup Title\' with value \'Benefit\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
 testRunner.When("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
 testRunner.Then("the user validates that the \'Input By Label Name\' with value \'Benefit type\' is vi" +
                        "sible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 74
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Benefit\' is visible" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 76
 testRunner.And("the user select value \'4 - Amount discount on Order Head\' from dropdown list \'Gen" +
                        "eric Drop Down Trigger\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.And("the user enters \'7.00\' in field \'Input By Label Name\' with value \'Benefit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit Um.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Generic Drop Down Trigger\'", benUmValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit sub-reason\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Generic Drop Down Trigger\'", benSubReason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.Then(string.Format("the user validates that the hierarchical node with value \'{0}\' -> \'{1}\' -> \'{2}\' " +
                            "is visible", thresholdNode1, benefitGroupNode1, benefitNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 84
 testRunner.And(string.Format("the user validates that the hierarchical node with value \'{0}\' -> \'{1}\' -> \'{2}\' " +
                            "is visible", thresholdNode1, benefitGroupNode1, benefitNode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.When("the user clicks on \'Checkbox\' with value \'Target discount\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 88
 testRunner.Then("the user validates that the \'Alert Dialog Message Box\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.And("the user validates that the \'Warning\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And("the user validates that \'Alert Dialog Message Box\' text contains \'Setting this fl" +
                        "ag true all benefits will be removed. Continue?\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.When("the user clicks on the \'Alert Dialog Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 94
 testRunner.Then("the user validates that the checkbox container \'Checkbox\' with value \'Target disc" +
                        "ount\' is set to the state: \'On\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 95
 testRunner.And(string.Format("the user validates that the hierarchical node with value \'{0}\' -> \'{1}\' is visibl" +
                            "e", thresholdNode1, benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And(string.Format("the user validates that the \'Node\' with value \'ThresholdNode1 => {0} => {1}\' is n" +
                            "ot shown", benefitGroupNode1, benefitNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And(string.Format("the user validates that the \'Node\' with value \'ThresholdNode1 => {0} => {1}\' is n" +
                            "ot shown", benefitGroupNode1, benefitNode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.When("the user clicks on \'Checkbox\' with value \'Target discount\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 101
 testRunner.Then("the user validates that the checkbox container \'Checkbox\' with value \'Target disc" +
                        "ount\' is set to the state: \'Off\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.When("the user clicks on \'Checkbox\' with value \'Target discount\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 105
 testRunner.Then("the user validates that the checkbox container \'Checkbox\' with value \'Target disc" +
                        "ount\' is set to the state: \'On\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 106
 testRunner.And("the user validates that the \'Alert Dialog Message Box\' is not present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.When("the user clicks on \'Checkbox\' with value \'Target discount\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.Then("the user validates that the checkbox container \'Checkbox\' with value \'Target disc" +
                        "ount\' is set to the state: \'Off\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.When(string.Format("the user clicks on the hierarchical node with the value \'{0}\'", benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 114
 testRunner.And("the user clicks on \'Button Link\' with value \'Benefit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 115
 testRunner.Then("the user validates that the \'Popup Title\' with value \'Benefit\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 116
 testRunner.When("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 117
 testRunner.Then("the user validates that the \'Input By Label Name\' with value \'Benefit type\' is vi" +
                        "sible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Benefit\' is visible" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
 testRunner.When("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 120
 testRunner.And("the user select value \'13 - Euro for Invoice unit\' from dropdown list \'Generic Dr" +
                        "op Down Trigger\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
 testRunner.And("the user enters \'15.00\' in field \'Input By Label Name\' with value \'Benefit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit Um.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Generic Drop Down Trigger\'", benUmValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Benefit sub-reason\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.And(string.Format("the user select value \'{0}\' from dropdown list \'Generic Drop Down Trigger\'", benSubReason), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.Then(string.Format("the user validates that the hierarchical node with value \'{0}\' -> \'{1}\' -> \'Euro " +
                            "for Invoice unit - 15 Euro\' is visible", thresholdNode1, benefitGroupNode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 130
 testRunner.When("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 131
 testRunner.Then("the user validates that the \'Success Toast Message\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 132
 testRunner.And("the user closes the page and saves the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
