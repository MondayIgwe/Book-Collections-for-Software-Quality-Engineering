// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.TPM.PromoActions
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_455697")]
    public partial class TestCase_455697Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_455697.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/TPM/PromoActions", "TestCase_455697", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_TPM_SP_PROMOPLANDOCUMENT_SCENARIOREASSIGN_001")]
        [NUnit.Framework.CategoryAttribute("BDD_455697")]
        [NUnit.Framework.CategoryAttribute("outofscope")]
        [NUnit.Framework.CategoryAttribute("donotrun")]
        [NUnit.Framework.TestCaseAttribute("hellow", null)]
        public virtual void WEB_TPM_SP_PROMOPLANDOCUMENT_SCENARIOREASSIGN_001(string test, string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_455697",
                    "outofscope",
                    "donotrun"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("test", test);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_TPM_SP_PROMOPLANDOCUMENT_SCENARIOREASSIGN_001", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Promotional actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When("the user creates a Promo \'<CUSTLEVEL>\' \'<CUSTOMER>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.And("the user populates the cockpit \'<PROMODESC1>\' \'<SELLINSTART>\' \'<SELLINEND>\' \'<SEL" +
                        "LOUTSTART>\' \'<SELLOUTEND>\' \'<MECHANICS>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("the user adds a product \'<PRODLEVEL>\' \'<PRODCODE>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And("the user enters \'<LC_COST>\' on column name \'Loyalty Card\' for product code \'<PROD" +
                        "CODE>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("the user enters \'<QTYESTIMATED>\' on column name \'Estimated quantity\' for product " +
                        "code \'<PRODCODE>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("the user clicks on \'Button\' with value \'Edit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("the user clicks on \'Button\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("the user clicks on the \'Profit And Loss Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("the user adds a product \'<PRODUCT_LEVEL>\' \'<PROD2>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user adds a product \'<PRODUCT_LEVEL>\' \'<PROD3>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("the user enters \'<PROD2_LCCOST>\' on column name \'Loyalty Card\' for product code \'" +
                        "<PROD2>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user enters \'<PROD3_LCCOST>\' on column name \'Loyalty Card\' for product code \'" +
                        "<PROD3>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("the user clicks on \'Button\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.Then("the user validates text \'<TOTALPROMOREBATE_VALUES>\' on column name \'Promo Total/C" +
                        "urrent\' for profit and loss \'<TOTALPROMOREBATE>\' with unique column \'Promo Total" +
                        " / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 30
 testRunner.And("the user validates text \'<NETMARGIN_VALUES>\' on column name \'Promo Total/Current\'" +
                        " for profit and loss \'<NETMARGIN>\' with unique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.When("the user clicks on \'Button\' with value \'Profit & Loss Retailer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 33
 testRunner.Then("the user validates text \'<GROSSCOST_VALUES>\' on column name \'Action/Current\' for " +
                        "profit and loss \'<GROSSCOST>\' with unique column \'Action / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 35
 testRunner.When("the user clicks on \'Button\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 36
 testRunner.And("the user clicks on the \'Remove Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user clicks on the \'Alert Dialog Ok Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user clicks on \'Button\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user clicks on \'Top Tab\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.Then("the user validates text \'<TOTALPROMOREBATE_VALUES>\' on column name \'Action/Curren" +
                        "t\' for profit and loss \'<TOTALPROMOREBATE>\' with unique column \'Promo Total / Cu" +
                        "rrent\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And("the user validates text \'<NETMARGIN_VALUES>\' on column name \'Promo Total/Current\'" +
                        " for profit and loss \'<NETMARGIN>\' with unique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.When("the user clicks on \'Button\' with value \'Profit & Loss Retailer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 46
 testRunner.Then("the user validates text \'<GROSSCOST_VALUES>\' on column name \'Action/Current\' for " +
                        "profit and loss \'<GROSSCOST>\' with unique column \'Action / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.When("the user clicks on \'Top Tab\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.And("the user clicks on \'Top Tab\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("the user clicks on the \'Profit And Loss Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.Then("the user validates text \'110.00\' on column name \'Promo Total/Current\' for profit " +
                        "and loss \'<TOTALPROMOREBATE>\' with unique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 54
 testRunner.And("the user validates text \'-110.00\' on column name \'Promo Total/Current\' for profit" +
                        " and loss \'<NETMARGIN>\' with unique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.When("the user clicks on \'Profit Loss Drop Down Trigger\' with value \'Detail type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 57
 testRunner.And("the user clicks on \'Selection Popup Checkbox\' with value \'<PRODUCTS>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Selection\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("the user clicks on \'Profit Loss Drop Down Trigger\' with value \'Detail data\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And("the user clicks on the \'Selection Popup All Checkbox\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Selection\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And("the user clicks on the \'Profit And Loss Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And("the user clicks on \'Top Tab\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.Then("the user validates text \'<TOTALPROMOREBATE_VALUES>\' on column name \'Product - BAC" +
                        "CO CHARDONNAY 0.75 lt / Current\' for profit and loss \'<TOTALPROMOREBATE>\' with u" +
                        "nique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 69
 testRunner.And("the user validates text \'<NETMARGIN_VALUES>\' on column name \'Product - BACCO CHAR" +
                        "DONNAY 0.75 lt / Current\' for profit and loss \'<NETMARGIN>\' with unique column \'" +
                        "Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.And("the user validates text \'70.00\' on column name \'Product - BACCO CORTESE 0.75 lt /" +
                        " Current\' for profit and loss \'<TOTALPROMOREBATE>\' with unique column \'Promo Tot" +
                        "al / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And("the user validates text \'-70.00\' on column name \'Product - BACCO CORTESE 0.75 lt " +
                        "/ Current\' for profit and loss \'<NETMARGIN>\' with unique column \'Promo Total / C" +
                        "urrent\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.When("the user clicks on \'Button\' with value \'Profit & Loss Retailer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 76
 testRunner.And("the user clicks on the \'Profit And Loss Retailer Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.Then("the user validates text \'110.00\' on column name \'Action/Current\' for profit and l" +
                        "oss \'<GROSSCOST>\' with unique column \'Action / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 79
 testRunner.When("the user clicks on \'Profit Loss Retailer Drop Down Trigger\' with value \'Detail ty" +
                        "pe\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
 testRunner.And("the user clicks on \'Selection Popup Checkbox\' with value \'<PRODUCTS>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Selection\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("the user clicks on \'Profit Loss Retailer Drop Down Trigger\' with value \'Detail da" +
                        "ta\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("the user clicks on the \'Selection Popup All Checkbox\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Selection\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("the user clicks on the \'Profit And Loss Retailer Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.Then("the user validates text \'<GROSSCOST_VALUES>\' on column name \'Product - BACCO CHAR" +
                        "DONNAY 0.75 lt / Current\' for profit and loss \'<GROSSCOST>\' with unique column \'" +
                        "Action / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.And("the user validates text \'70.00\' on column name \'Product - BACCO CORTESE 0.75 lt /" +
                        " Current\' for profit and loss \'<GROSSCOST>\' with unique column \'Action / Current" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.When("the user clicks on \'Button\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.And("the user enters \'<NEW_LCCOST_PROD1>\' on column name \'Loyalty Card\' for product co" +
                        "de \'<PRODCODE>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.And("the user enters \'<NEW_LCCOST_PROD2>\' on column name \'Loyalty Card\' for product co" +
                        "de \'<PROD2>\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And("the user clicks on \'Button\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And("the user clicks on \'Top Tab\' with value \'Profit & Loss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 97
 testRunner.And("the user clicks on the \'Profit And Loss Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.Then("the user validates text \'100.00\' on column name \'Promo Total / Current\' for profi" +
                        "t and loss \'<TOTALPROMOREBATE>\' with unique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 99
 testRunner.And("the user validates text \'-100.00\' on column name \'Promo Total / Current\' for prof" +
                        "it and loss \'<NETMARGIN>\' with unique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And("the user validates text \'<TOTALPROMOREBATE_VALUES>\' on column name \'Product - BAC" +
                        "CO CHARDONNAY 0.75 lt / Current\' for profit and loss \'<TOTALPROMOREBATE>\' with u" +
                        "nique column \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.And("the user validates text \'<NETMARGIN_VALUES>\' on column name \'Product - BACCO CHAR" +
                        "DONNAY 0.75 lt / Current\' for profit and loss \'<NETMARGIN>\' with unique column \'" +
                        "Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.And("the user validates text \'<NEW_LCCOST_PROD2>\' on column name \'Product - BACCO CORT" +
                        "ESE 0.75 lt / Current\' for profit and loss \'<TOTALPROMOREBATE>\' with unique colu" +
                        "mn \'Promo Total / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.And("the user validates text \'-60.00\' on column name \'Product - BACCO CORTESE 0.75 lt " +
                        "/ Current\' for profit and loss \'<NETMARGIN>\' with unique column \'Promo Total / C" +
                        "urrent\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.When("the user clicks on \'Button\' with value \'Profit & Loss Retailer\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 110
 testRunner.And("the user clicks on the \'Profit And Loss Retailer Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 112
 testRunner.Then("the user validates text \'100.00\' on column name \'Action / Current\' for profit and" +
                        " loss \'<GROSSCOST>\' with unique column \'Action / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 114
 testRunner.And("the user validates text \'<GROSSCOST_VALUES>\' on column name \'Product - BACCO CHAR" +
                        "DONNAY 0.75 lt / Current\' for profit and loss \'<GROSSCOST>\' with unique column \'" +
                        "Action / Current\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 116
 testRunner.And("the user validates text \'60.00\' on column name \'Product - BACCO CORTESE 0.75 lt /" +
                        " Current\' for profit and loss \'<GROSSCOST>\' with unique column \'Action / Current" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 117
 testRunner.When("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
 testRunner.And("the user clicks on the \'Alert Dialog No Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
