// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SA.NightlyRunsRecoped
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase559339")]
    public partial class TestCase559339Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase559339.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SA/NightlyRunsRecoped", "TestCase559339", "\tWEB_SA_AGREEMENT_AGREEMENT DOCUMENT_CONDITIONS_097 - Promo tab - only target wit" +
                    "h end date <= sell-in end date are visible in the selector", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SA_AGREEMENT_AGREEMENT_DOCUMENT_CONDITIONS_097")]
        [NUnit.Framework.CategoryAttribute("TTC_Nightly")]
        [NUnit.Framework.CategoryAttribute("TCC")]
        [NUnit.Framework.CategoryAttribute("BDD_559339")]
        [NUnit.Framework.TestCaseAttribute("Level 3", "EC86215", "AGG_CODE_559339", "AGG_DES_559339", "Supply", "Year End Bonuses", "Brackets", "Invoice payable", "Sales volumes (pieces)", "Net sales revenue", "REB_DES_559339", "01/01/y", "30/06/y", "10", "REB2_DES_559339", "Monthly", "3000", "01/08/y", "31/08/y", "PROMO_559339", "Display", "Product", "007", "500", "31/10/y", null)]
        public virtual void WEB_SA_AGREEMENT_AGREEMENT_DOCUMENT_CONDITIONS_097(
                    string customerLevel, 
                    string customerHolder, 
                    string agreementCode, 
                    string agreementDescription, 
                    string classification, 
                    string reason, 
                    string targetType, 
                    string paymentMode, 
                    string calculationBasis, 
                    string targetSource, 
                    string rebateDescription, 
                    string startDate, 
                    string endDate, 
                    string percentage, 
                    string rebateDescription2, 
                    string paymentFrequency, 
                    string fixedAmount, 
                    string promoStartDate, 
                    string promoEndDate, 
                    string promoDescription, 
                    string mechanic, 
                    string productLevel, 
                    string productCode, 
                    string measure, 
                    string rebateUpdateEndDate, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "TTC_Nightly",
                    "TCC",
                    "BDD_559339"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CustomerLevel", customerLevel);
            argumentsOfScenario.Add("CustomerHolder", customerHolder);
            argumentsOfScenario.Add("AgreementCode", agreementCode);
            argumentsOfScenario.Add("AgreementDescription", agreementDescription);
            argumentsOfScenario.Add("Classification", classification);
            argumentsOfScenario.Add("Reason", reason);
            argumentsOfScenario.Add("TargetType", targetType);
            argumentsOfScenario.Add("PaymentMode", paymentMode);
            argumentsOfScenario.Add("CalculationBasis", calculationBasis);
            argumentsOfScenario.Add("TargetSource", targetSource);
            argumentsOfScenario.Add("RebateDescription", rebateDescription);
            argumentsOfScenario.Add("StartDate", startDate);
            argumentsOfScenario.Add("EndDate", endDate);
            argumentsOfScenario.Add("Percentage", percentage);
            argumentsOfScenario.Add("RebateDescription2", rebateDescription2);
            argumentsOfScenario.Add("PaymentFrequency", paymentFrequency);
            argumentsOfScenario.Add("FixedAmount", fixedAmount);
            argumentsOfScenario.Add("promoStartDate", promoStartDate);
            argumentsOfScenario.Add("promoEndDate", promoEndDate);
            argumentsOfScenario.Add("PromoDescription", promoDescription);
            argumentsOfScenario.Add("Mechanic", mechanic);
            argumentsOfScenario.Add("ProductLevel", productLevel);
            argumentsOfScenario.Add("ProductCode", productCode);
            argumentsOfScenario.Add("Measure", measure);
            argumentsOfScenario.Add("RebateUpdateEndDate", rebateUpdateEndDate);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SA_AGREEMENT_AGREEMENT_DOCUMENT_CONDITIONS_097", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("the user navigates to the \'Agreements\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When(string.Format("the user creates a New Document \'{0}\' \'{1}\' \'{2}\' \'{3}\'", customerLevel, customerHolder, agreementCode, agreementDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.And("the user retrieves text from element \'Input By Label Name\' with value \'Agreement " +
                        "ID\' and saves it as \'AgreementID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.Then("the user validates that the \'Sub Tab Add Button\' with value \'Rebate Header\' is di" +
                        "splayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 12
 testRunner.When("the user clicks on \'Sub Tab Add Button\' with value \'Rebate Header\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 13
 testRunner.Then("the user validates that the \'Popup\' with value \'New Rebate:\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 14
 testRunner.When(string.Format("the user populates the New Rebate Details \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\'", classification, reason, targetType, paymentMode, calculationBasis, rebateDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 15
 testRunner.And(string.Format("the user selects validity period \'{0}\' \'{1}\' on the \'Rebate Validity Period\' fiel" +
                            "d", startDate, endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("the user clicks on \'Element by SM1Id\' with value \'ACTION_all-filters\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And(string.Format("the user in popup \'Rebate Products:\' enters \'{0}\' in cell with column \'%\' and row" +
                            " text \'All Products\'", percentage), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'New Rebate\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.When("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 23
 testRunner.Given("the user navigates to the \'Rebates\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 24
 testRunner.When(string.Format("the user creates a Rebate \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\'", customerLevel, customerHolder, classification, reason, targetType), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.And(string.Format("the user populates the Rebate Details \'{0}\' \'{1}\' \'{2}\'", paymentMode, calculationBasis, rebateDescription2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And(string.Format("the user selects validity period \'{0}\' \'{1}\' on the \'Small Letter Rebate validity" +
                            " Period\' field", startDate, endDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.Then("the user validates that the \'Input By Label Name\' with value \'Rebate code\' is dis" +
                        "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 28
 testRunner.When("the user retrieves text from element \'Input By Label Name\' with value \'Rebate cod" +
                        "e\' and saves it as \'RebateCode2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 29
 testRunner.And(string.Format("the user enters \'{0}\' in cell with column \'Fixed amount\' and row containing text " +
                            "\'0.0\'", fixedAmount), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And(string.Format("the user populates the Rebate mandatory data \'{0}\' \'{1}\' \'{2}\'", targetSource, paymentMode, paymentFrequency), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'General Info\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("the user clicks on \'Generic Drop Down Trigger\' with value \'Agreement ID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user clicks on \'Text\' with value \'AgreementID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user clicks on the \'Agreement Code Label\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("the user clicks on the \'Refresh button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("the user navigates to the \'Agreements\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("the user clicks on \'AgreementID\' text on the grid", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user clicks on \'Button\' with value \'Edit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Conditions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.When("the user clicks on \'Sub Tab\' with value \'PROMOTIONS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 47
 testRunner.Then("the user validates that the \'Sub Tab Add Button\' with value \'Promo Header\' is dis" +
                        "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.When("the user clicks on \'Sub Tab Add Button\' with value \'Promo Header\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.Then("the user validates that the \'Popup\' with value \'New Promotion\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.When("the user clicks on \'Popup Ok Button\' with value \'New Promotion\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.Then("the user validates that the \'Input By Label Name\' with value \'Description\' is dis" +
                        "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 52
 testRunner.When("the user retrieves text from element \'Input By Label Name\' with value \'Action Id\'" +
                        " and saves it as \'ActionId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 53
 testRunner.When(string.Format("the user populates the cockpit \'{0}\' \'{1}\' \'{2}\' \'{1}\' \'{2}\' \'{3}\'", promoDescription, promoStartDate, promoEndDate, mechanic), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
 testRunner.When("the user clicks on \'Sub Tab\' with value \'Header info\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 55
 testRunner.When("the user retrieves text from element \'Input By Label Name\' with value \'Action cod" +
                        "e\' and saves it as \'PromoId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.When(string.Format("the user adds a product \'{0}\' \'{1}\'", productLevel, productCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 57
 testRunner.Then("the user validates that elements \'Rows\' have loaded", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 58
 testRunner.When(string.Format("the user enters \'{0}\' on column name \'{1}\' for product code \'{2}\'", measure, mechanic, productCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 59
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.Then("the user validates that the \'Loading Mask\' is not present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 63
 testRunner.When("the user clicks on \'Grid Checkbox\' with value \'ActionId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 64
 testRunner.And("the user clicks on \'Button\' with value \'Add Link to Target\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.Then(string.Format("the user validates that the \'Popup Grid Node\' with value \'{0}\' is present", rebateDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.And(string.Format("the user validates that the \'Popup Grid Node\' with value \'{0}\' is present", rebateDescription2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
 testRunner.When("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 71
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And("the user clicks on \'Top Tab\' with value \'REBATES\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And(string.Format("the user clicks on \'Grid Checkbox\' with value \'{0}\'", rebateDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("the user clicks on \'Element by SM1Id\' with value \'ACTION_edit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.Then("the user validates that the \'Loading Mask\' is not present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 78
 testRunner.When(string.Format("the user selects validity period \'{0}\' \'{1}\' on the \'Rebate Validity Period\' fiel" +
                            "d", startDate, rebateUpdateEndDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 80
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("the user clicks on \'Top Tab\' with value \'PROMOTIONS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("the user clicks on \'Button\' with value \'Add Link to Target\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.Then(string.Format("the user validates that the \'Popup Grid Node\' with value \'{0}\' is not present", rebateDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.And(string.Format("the user validates that the \'Popup Grid Node\' with value \'{0}\' is present", rebateDescription2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.When("the user clicks on \'Popup Button\' with value \'Cancel\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 91
 testRunner.When("the user navigates to the \'Rebates\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 92
 testRunner.And("the user filters the column by column name \'Rebate code\', \'Like\', \'RebateCode2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 94
 testRunner.And("the user clicks on \'Button\' with value \'Edit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.Then("the user validates that the \'Loading Mask\' is not present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 97
 testRunner.When(string.Format("the user selects validity period \'{0}\' \'{1}\' on the \'Small Letter Rebate validity" +
                            " Period\' field", startDate, rebateUpdateEndDate), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 98
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.When("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 101
 testRunner.When("the user navigates to the \'Agreements\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 102
 testRunner.And("the user filters the column by column name \'Agreement ID\', \'Like\', \'AgreementID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.And("the user clicks on \'Button\' with value \'Edit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Conditions\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 106
 testRunner.And("the user clicks on \'Top Tab\' with value \'PROMOTIONS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.And("the user clicks on \'Grid Checkbox\' with value \'ActionId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("the user clicks on \'Button\' with value \'Add Link to Target\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.Then(string.Format("the user validates that the \'Popup Grid Node\' with value \'{0}\' is not present", rebateDescription), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 111
 testRunner.And(string.Format("the user validates that the \'Popup Grid Node\' with value \'{0}\' is not present", rebateDescription2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
