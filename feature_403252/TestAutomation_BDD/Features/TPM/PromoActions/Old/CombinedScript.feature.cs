// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.TPM.PromoActions.Old
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("Combined Actions TestCase_345335")]
    public partial class CombinedActionsTestCase_345335Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "CombinedScript.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/TPM/PromoActions/Old", "Combined Actions TestCase_345335", "\tCreates a new Promo Action with the desired data, edits the created Promo Action" +
                    ", \r\n\tadds and removes the products and validates the profits and losses in the \r" +
                    "\n\tProfits and Losses grid", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC345335")]
        [NUnit.Framework.TestCaseAttribute("EC86172", "Level 4", "Holder Level", "TPM_SP_W_SMOKE_R80V1_0016", "d/m/y", "d+10/m/y", "Loyalty Card", "Product", "004", "40", "0", "007", "009", "Product", "70", "90", "Total Promo Rebate", "Gross Cost", "BACCO CHARDONNAY 0.75 lt", "BACCO CORTESE 0.75 lt", "40", "60", "40.00,110.00,70.00,100.00,60.00", "-40.00,-110.00,-70.00,-100.00,-60.00", "40.00,110.00,70.00,100.00,60.00", "Net Margin", "Product", "local", "Product1LCCost,Product1EstumatedQty", "40,0", null)]
        public virtual void TC345335(
                    string customerCode, 
                    string customerHierarchyLevel, 
                    string confirmationLevel, 
                    string description, 
                    string sellInStartDate, 
                    string sellInEndDate, 
                    string promoActionMechanic, 
                    string product1Level, 
                    string productCode1, 
                    string product1LCCost, 
                    string product1EstumatedQty, 
                    string productCode2, 
                    string productCode3, 
                    string addedProductsLevel, 
                    string product2LCCost, 
                    string product3LCCost, 
                    string totalPromoRebateRow, 
                    string grossCostRow, 
                    string product1Name, 
                    string product2Name, 
                    string newProduct1LCCost, 
                    string newProduct2LCCost, 
                    string totalPromoRebateValues, 
                    string netMarginValues, 
                    string grossCostValues, 
                    string netMarginRow, 
                    string tableName, 
                    string dataSource, 
                    string columns, 
                    string tableData, 
                    string[] exampleTags)
        {
            string[] tagsOfScenario = exampleTags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CustomerCode", customerCode);
            argumentsOfScenario.Add("CustomerHierarchyLevel", customerHierarchyLevel);
            argumentsOfScenario.Add("ConfirmationLevel", confirmationLevel);
            argumentsOfScenario.Add("Description", description);
            argumentsOfScenario.Add("SellInStartDate", sellInStartDate);
            argumentsOfScenario.Add("SellInEndDate", sellInEndDate);
            argumentsOfScenario.Add("PromoActionMechanic", promoActionMechanic);
            argumentsOfScenario.Add("Product1Level", product1Level);
            argumentsOfScenario.Add("ProductCode1", productCode1);
            argumentsOfScenario.Add("Product1LCCost", product1LCCost);
            argumentsOfScenario.Add("Product1EstumatedQty", product1EstumatedQty);
            argumentsOfScenario.Add("ProductCode2", productCode2);
            argumentsOfScenario.Add("ProductCode3", productCode3);
            argumentsOfScenario.Add("AddedProductsLevel", addedProductsLevel);
            argumentsOfScenario.Add("Product2LCCost", product2LCCost);
            argumentsOfScenario.Add("Product3LCCost", product3LCCost);
            argumentsOfScenario.Add("TotalPromoRebateRow", totalPromoRebateRow);
            argumentsOfScenario.Add("GrossCostRow", grossCostRow);
            argumentsOfScenario.Add("Product1Name", product1Name);
            argumentsOfScenario.Add("Product2Name", product2Name);
            argumentsOfScenario.Add("NewProduct1LCCost", newProduct1LCCost);
            argumentsOfScenario.Add("NewProduct2LCCost", newProduct2LCCost);
            argumentsOfScenario.Add("TotalPromoRebateValues", totalPromoRebateValues);
            argumentsOfScenario.Add("NetMarginValues", netMarginValues);
            argumentsOfScenario.Add("GrossCostValues", grossCostValues);
            argumentsOfScenario.Add("NetMarginRow", netMarginRow);
            argumentsOfScenario.Add("TableName", tableName);
            argumentsOfScenario.Add("DataSource", dataSource);
            argumentsOfScenario.Add("Columns", columns);
            argumentsOfScenario.Add("tableData", tableData);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC345335", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 6
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 8
 testRunner.Given("the user is on the \'Promotional actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 11
 testRunner.When(string.Format("the user creates a Promo \'{0}\' \'{1}\'", customerHierarchyLevel, customerCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
 testRunner.And(string.Format("the user populates the cockpit \'Promo Action ID\' \'{0}\' \'Sell-In start\' \'Sell-In e" +
                            "nd\' \'{1}\'", description, promoActionMechanic), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("the user adds a product \'{0}\' \'{1}\'", product1Level, productCode1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.Then("the user clicks on the \'save button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.When("the \'green notification banner\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 21
 testRunner.Then("the user clicks on the \'close button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 24
 testRunner.Then("the user is on the \'Promotional actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.When("the user filters \'Action Id\' \'number\' column for \'Promo Action ID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 26
 testRunner.Then("the user clicks on the \'Promo Action ID\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 27
 testRunner.When("the user is on the \'Cockpit Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 30
 testRunner.Then("the user clicks on the \'edit button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.Then("the user clicks on the \'Profit & Loss Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 34
 testRunner.When("the user is on the \'Profit & Loss Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 35
 testRunner.Then("the user clicks on the \'Refresh Button PL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.When("the user clicks on the \'Profit & Loss Retailer subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
 testRunner.Then("the user clicks on the \'Refresh Button PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 38
 testRunner.And("the user clicks on the \'Profit & Loss subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And(string.Format("the user adds a product \'{0}\' \'{1}\'", product1Level, productCode2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.Then(string.Format("the user enters \'{0}\' under the column number \'4\' in row number \'2\' in table \'Pro" +
                            "ducts\'", product2LCCost), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 47
 testRunner.Then("the user clicks on the \'Add button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 48
 testRunner.When("the \'Product pop-up\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 49
 testRunner.Then(string.Format("the user selects \'{0}\' in the \'Product Level side panel\'", addedProductsLevel), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 50
 testRunner.And(string.Format("the user selects \'{0}\' in the \'Product Table\'", productCode3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.When("the user clicks on the \'OK button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 54
 testRunner.Then(string.Format("the user enters \'{0}\' under the column number \'4\' in row number \'3\' in table \'Pro" +
                            "ducts\'", product3LCCost), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 55
 testRunner.Then("the user clicks on the \'Profit & Loss Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 56
 testRunner.When("the user is on the \'Profit & Loss Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 57
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", totalPromoRebateRow, totalPromoRebateValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 58
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", netMarginRow, netMarginValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.Then("the user clicks on the \'Profit & Loss Retailer subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 61
 testRunner.Then("the user clicks on the \'Profit & Loss subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 64
 testRunner.When("the user clicks on the \'Products Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.Then("the user is on the \'Products Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 66
 testRunner.And("the user clicks on the \'Remove Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("the user clicks on the \'OK pop up button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 68
 testRunner.When("the user clicks on the \'Profit & Loss Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 69
 testRunner.And("the user is on the \'Profit & Loss Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
 testRunner.Then("the user clicks on the \'Profit & Loss subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 72
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", totalPromoRebateRow, totalPromoRebateValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 73
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", netMarginRow, netMarginValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.Then("the user clicks on the \'Profit & Loss Retailer subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 75
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 78
 testRunner.And("the user clicks on the \'Profit & Loss subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("the user clicks on the \'Refresh Button PL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", totalPromoRebateRow, totalPromoRebateValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 81
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", netMarginRow, netMarginValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.Then("the user clicks on the \'Profit & Loss Retailer subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 83
 testRunner.And("the user clicks on the \'Refresh Button PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.Then(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 87
 testRunner.When("the user clicks on the \'Profit & Loss subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 88
 testRunner.Then("the user clicks on the \'Refresh Button PL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 89
 testRunner.When("the user clicks on the \'Detail type drop down menu PL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 90
 testRunner.Then("the user checks on the \'Checkbox;Products\' checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 91
 testRunner.And("the user clicks on the \'OK button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.When("the user clicks on the \'Detail data drop down menu PL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 93
 testRunner.Then("the user checks on the \'Select All\' checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 94
 testRunner.And("the user clicks on the \'OK button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.When("the user clicks on the \'Refresh Button PL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 97
 testRunner.Then(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'5\' in table \'Profit & Loss\'", totalPromoRebateRow, totalPromoRebateValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 98
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'4\' in table \'Profit & Loss\'", totalPromoRebateRow, totalPromoRebateValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'5\' in table \'Profit & Loss\'", netMarginRow, netMarginValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 100
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'4\' in table \'Profit & Loss\'", netMarginRow, netMarginValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 103
 testRunner.Then("the user clicks on the \'Profit & Loss Retailer subtab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 104
 testRunner.And("the user clicks on the \'Refresh Button PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.Then(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.When("the user clicks on the \'Detail type drop down menu PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 109
 testRunner.Then("the user checks on the \'Checkbox;Products\' checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.And("the user clicks on the \'OK button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 111
 testRunner.When("the user clicks on the \'Detail data drop down menu PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 112
 testRunner.Then("the user checks on the \'Select All\' checkbox", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 113
 testRunner.And("the user clicks on the \'OK button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.When("the user clicks on the \'Refresh Button PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 115
 testRunner.Then(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'4\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 118
 testRunner.When("the user clicks on the \'Products Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 119
 testRunner.Then(string.Format("the user enters \'{0}\' under the column number \'4\' in row number \'1\' in table \'Pro" +
                            "ducts\'", newProduct1LCCost), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 120
 testRunner.And(string.Format("the user enters \'{0}\' under the column number \'4\' in row number \'2\' in table \'Pro" +
                            "ducts\'", newProduct2LCCost), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("the user clicks on the \'Profit & Loss Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.When("the user is on the \'Profit & Loss Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 125
 testRunner.And("the user clicks on the \'Refresh Button PLR\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.When(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'3\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 127
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'4\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.And(string.Format("\'{0}\' has a value of \'{1}\' in  column numnber \'5\' in table \'Profit & Loss\'", grossCostRow, grossCostValues), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.Then("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
