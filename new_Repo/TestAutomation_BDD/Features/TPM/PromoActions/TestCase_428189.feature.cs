// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.TPM.PromoActions
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_428189")]
    public partial class TestCase_428189Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_428189.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/TPM/PromoActions", "TestCase_428189", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_TPM_SP_PRODUCTGRID_MEASUREVALUES_EDIT_002")]
        [NUnit.Framework.CategoryAttribute("BDD_428189")]
        [NUnit.Framework.CategoryAttribute("PROMO_Nightly")]
        [NUnit.Framework.CategoryAttribute("PromoActions")]
        [NUnit.Framework.TestCaseAttribute("XTEL TPM AUTOMATION - Global Group SM1V4", "EC86184", "AUCHAN_EC86184_2", "Level 3", "Level 3", "Holder level", "Draft", "d+10/m/y", "d+20/m/y", "d+10/m/y", "d+20/m/y", "TPR in %,Leaflet", "Reference", "Allocation: rule", "Reference", "01201", "01202", "Allocation: copy", "030", "031", "032", null)]
        public virtual void WEB_TPM_SP_PRODUCTGRID_MEASUREVALUES_EDIT_002(
                    string dIVISION, 
                    string hOLDER, 
                    string hOLDERDESCR, 
                    string hOLDERLEVEL, 
                    string cOVERAGE, 
                    string cONFIRMATIONLEVEL, 
                    string wFSTATUS, 
                    string sELLINSTARTDATE, 
                    string sELLINENDDATE, 
                    string sELLOUTSTARTDATE, 
                    string sELLOUTENDDATE, 
                    string mECH, 
                    string pRODUCTLEVEL, 
                    string aLLOCATION_TYPE, 
                    string pRODUCTSLEVEL1, 
                    string pRODREF1, 
                    string pRODREF2, 
                    string aLLOCATION_TYPE1, 
                    string pROD1, 
                    string pROD2, 
                    string pROD3, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_428189",
                    "PROMO_Nightly",
                    "PromoActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("DIVISION", dIVISION);
            argumentsOfScenario.Add("HOLDER", hOLDER);
            argumentsOfScenario.Add("HOLDERDESCR", hOLDERDESCR);
            argumentsOfScenario.Add("HOLDERLEVEL", hOLDERLEVEL);
            argumentsOfScenario.Add("COVERAGE", cOVERAGE);
            argumentsOfScenario.Add("CONFIRMATIONLEVEL", cONFIRMATIONLEVEL);
            argumentsOfScenario.Add("WFSTATUS", wFSTATUS);
            argumentsOfScenario.Add("SELLINSTARTDATE", sELLINSTARTDATE);
            argumentsOfScenario.Add("SELLINENDDATE", sELLINENDDATE);
            argumentsOfScenario.Add("SELLOUTSTARTDATE", sELLOUTSTARTDATE);
            argumentsOfScenario.Add("SELLOUTENDDATE", sELLOUTENDDATE);
            argumentsOfScenario.Add("MECH", mECH);
            argumentsOfScenario.Add("PRODUCTLEVEL", pRODUCTLEVEL);
            argumentsOfScenario.Add("ALLOCATION_TYPE", aLLOCATION_TYPE);
            argumentsOfScenario.Add("PRODUCTSLEVEL1", pRODUCTSLEVEL1);
            argumentsOfScenario.Add("PRODREF1", pRODREF1);
            argumentsOfScenario.Add("PRODREF2", pRODREF2);
            argumentsOfScenario.Add("ALLOCATION_TYPE1", aLLOCATION_TYPE1);
            argumentsOfScenario.Add("PROD1", pROD1);
            argumentsOfScenario.Add("PROD2", pROD2);
            argumentsOfScenario.Add("PROD3", pROD3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_TPM_SP_PRODUCTGRID_MEASUREVALUES_EDIT_002", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Promotional actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When(string.Format("the user creates a Promo \'{0}\' \'{1}\'", hOLDERLEVEL, hOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 9
 testRunner.And(string.Format("the user populates the cockpit \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\'", hOLDERDESCR, sELLINSTARTDATE, sELLINENDDATE, sELLOUTSTARTDATE, sELLOUTENDDATE, mECH), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("the user adds a product \'{0}\' \'{1}\'", pRODUCTLEVEL, pRODREF1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(string.Format("the user adds a product \'{0}\' \'{1}\'", pRODUCTLEVEL, pRODREF2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("the user unchecks all columns on the product table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("the user clicks on \'Product Grid CheckBox\' with value \'ALL - Selected\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("the user enters \'10\' on column name \'% Cut Price\' for product code \'ALL - Selecte" +
                        "d\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.Then(string.Format("the user validates text \'10.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.And(string.Format("the user validates text \'10.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And(string.Format("the user validates text \'10.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.When(string.Format("the user enters \'20\' on column name \'% Cut Price\' for product code \'{0}\'", pRODREF1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 24
 testRunner.Then(string.Format("the user validates text \'20.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 25
 testRunner.And(string.Format("the user validates text \'20.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.When("the user clicks on the \'Product Grid Allocation DropDown\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 28
 testRunner.And(string.Format("the user clicks on \'List\' with value \'{0}\'", aLLOCATION_TYPE1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("the user unchecks all columns on the product table", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And(string.Format("the user clicks on \'Product Grid CheckBox\' with value \'{0}\'", pRODREF1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And(string.Format("the user clicks on \'Product Grid CheckBox\' with value \'{0}\'", pRODREF2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user enters \'30\' on column name \'% Cut Price\' for product code \'ALL - Selecte" +
                        "d\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.Then(string.Format("the user validates text \'30.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.And(string.Format("the user validates text \'30.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And(string.Format("the user validates text \'30.00\' on column name \'% Cut Price\' for product code \'{0" +
                            "}\'", pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.When(string.Format("the user enters \'40\' on column name \'% Cut Price\' for product code \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 40
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("the user clicks on the \'Alert Dialog No Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
