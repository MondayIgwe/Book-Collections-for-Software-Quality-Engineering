// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.VisitsUI
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_760737")]
    public partial class TestCase_760737Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_760737.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/VisitsUI", "TestCase_760737", "\tTest Case 760737", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_SE_VISIT_015_SUMMARY_TAB_IN_CUSTOMER_VISIT_UI")]
        [NUnit.Framework.CategoryAttribute("BDD_760737")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        public virtual void WEB_SFA_SE_VISIT_015_SUMMARY_TAB_IN_CUSTOMER_VISIT_UI()
        {
            string[] tagsOfScenario = new string[] {
                    "BDD_760737",
                    "SFA_Nightly"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_SE_VISIT_015_SUMMARY_TAB_IN_CUSTOMER_VISIT_UI", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Visits\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When("the user filters the column by column name \'Id Visit\', \'Like\', \'00000000000000000" +
                        "1620640006245\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.Then("the user validates that the \'Toolbar Page Name\' with value \'E CENTER Schäfer - Ne" +
                        "uss | NEUSS\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 11
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Customer\' has text \'E C" +
                        "ENTER Schäfer - Neuss\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And("the user validates that \'Input By Label Name\' with value \'User\' has text \'SFA Aut" +
                        "omation 7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Start Date\' has text \'0" +
                        "5/10/2021 12:00:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And("the user validates that \'Input By Label Name\' with value \'End Date\' has text \'05/" +
                        "10/2021 12:30:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Status\' has text \'PLANN" +
                        "ED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Priority\' has text \'MED" +
                        "IUM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("the user validates that the \'Section\' with value \'Main information\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("the user validates that the \'Section\' with value \'Product lines\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Contact mode\' has text " +
                        "\'Visit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Address\' has text \'Hoch" +
                        "stadenstraße 17, NEUSS, 41469, NW, DE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user validates that the \'Column\' with value \'Category\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("the user validates that the \'Column\' with value \'Retail cluster\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.When("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 25
 testRunner.And("the user filters the column by column name \'Id Visit\', \'Like\', \'00000000000000000" +
                        "1620640819467\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.Then("the user validates that the \'Toolbar Page Name\' with value \'ENOTECA PROVINO | PIA" +
                        "CENZA\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 29
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Customer\' has text \'ENO" +
                        "TECA PROVINO\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("the user validates that \'Input By Label Name\' with value \'User\' has text \'SFA Aut" +
                        "omation 7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Start Date\' has text \'0" +
                        "5/11/2021 12:30:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("the user validates that \'Input By Label Name\' with value \'End Date\' has text \'05/" +
                        "11/2021 13:00:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Status\' has text \'PLANN" +
                        "ED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Priority\' has text \'MED" +
                        "IUM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Contact mode\' has text " +
                        "\'Visit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Address\' has text \'VIA " +
                        "CHIAPPONI, 31, PIACENZA, 29100, PC, IT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.When("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 39
 testRunner.And("the user filters the column by column name \'Id Visit\', \'Like\', \'00000000000000000" +
                        "1620640939502\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.Then("the user validates that the \'Toolbar Page Name\' with value \'FAGJ SRL | VERONA\' is" +
                        " present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 43
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Customer\' has text \'FAG" +
                        "J SRL\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user validates that \'Input By Label Name\' with value \'User\' has text \'SFA Aut" +
                        "omation 7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Start Date\' has text \'0" +
                        "5/12/2021 13:30:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("the user validates that \'Input By Label Name\' with value \'End Date\' has text \'05/" +
                        "12/2021 14:00:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Status\' has text \'PLANN" +
                        "ED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Priority\' has text \'MED" +
                        "IUM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Contact mode\' has text " +
                        "\'Visit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Address\' has text \'VIC." +
                        "CIECO S.PIETRO INCARNARIO, VERONA, 37121, VR, IT\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.When("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 53
 testRunner.And("the user filters the column by column name \'Id Visit\', \'Like\', \'00000000000000000" +
                        "1620641485946\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.Then("the user validates that the \'Toolbar Page Name\' with value \'E CENTER Kaarst - Kaa" +
                        "rst | KAARST\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 57
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Customer\' has text \'E C" +
                        "ENTER Kaarst - Kaarst\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("the user validates that \'Input By Label Name\' with value \'User\' has text \'SFA Aut" +
                        "omation 7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Start Date\' has text \'0" +
                        "5/13/2021 13:00:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 60
 testRunner.And("the user validates that \'Input By Label Name\' with value \'End Date\' has text \'05/" +
                        "13/2021 13:30:00\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Status\' has text \'PLANN" +
                        "ED\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Priority\' has text \'MED" +
                        "IUM\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 63
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Contact mode\' has text " +
                        "\'Visit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And("the user validates that \'Input By Label Name\' with value \'Address\' has text \'Gust" +
                        "av-Heinemann-Straße 7, KAARST, 41564, BE, DE\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And("the user validates that the \'Column\' with value \'Category\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("the user validates that the \'Column\' with value \'Retail cluster\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
