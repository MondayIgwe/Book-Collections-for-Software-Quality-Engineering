// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.VisitsUI
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_787641")]
    public partial class TestCase_787641Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_787641.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/VisitsUI", "TestCase_787641", "\tTest Case 787641", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_SE_VISIT_005_MEASURES_SHOWN_IN_PRODUCT_ACTIVITY")]
        [NUnit.Framework.CategoryAttribute("BDD_787641")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        [NUnit.Framework.TestCaseAttribute("000000000000000210717211740396", "text box", "combo box", "check box", "date", "numeric decimal", "numeric integer", "Test", "% Discount on Order Head", "BACIOCK", "Monday", "96,545,247", "96,545,247.3457", "96,545,247.35", "96,545,247.34567", "07/19/2021", "on", "off", null)]
        public virtual void WEB_SFA_SE_VISIT_005_MEASURES_SHOWN_IN_PRODUCT_ACTIVITY(
                    string filterValue, 
                    string textBox, 
                    string comboBox, 
                    string checkBox, 
                    string date, 
                    string numericDecimal, 
                    string numericInteger, 
                    string text1, 
                    string text2, 
                    string text3, 
                    string text4, 
                    string text5, 
                    string text6, 
                    string text7, 
                    string text8, 
                    string text9, 
                    string trueFlag, 
                    string falseFlag, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_787641",
                    "SFA_Nightly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FilterValue", filterValue);
            argumentsOfScenario.Add("TextBox", textBox);
            argumentsOfScenario.Add("ComboBox", comboBox);
            argumentsOfScenario.Add("CheckBox", checkBox);
            argumentsOfScenario.Add("Date", date);
            argumentsOfScenario.Add("NumericDecimal", numericDecimal);
            argumentsOfScenario.Add("NumericInteger", numericInteger);
            argumentsOfScenario.Add("Text1", text1);
            argumentsOfScenario.Add("Text2", text2);
            argumentsOfScenario.Add("Text3", text3);
            argumentsOfScenario.Add("Text4", text4);
            argumentsOfScenario.Add("Text5", text5);
            argumentsOfScenario.Add("Text6", text6);
            argumentsOfScenario.Add("Text7", text7);
            argumentsOfScenario.Add("Text8", text8);
            argumentsOfScenario.Add("Text9", text9);
            argumentsOfScenario.Add("TrueFlag", trueFlag);
            argumentsOfScenario.Add("FalseFlag", falseFlag);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_SE_VISIT_005_MEASURES_SHOWN_IN_PRODUCT_ACTIVITY", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Visits\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When(string.Format("the user filters the column by column name \'Id Visit\', \'Like\', \'{0}\'", filterValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Product activity type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.Then(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'TEXT BOX\' is of type \'{0}\'", textBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 12
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'TEXT BOX\' column in the row number \'1\'", text1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'TEXT COMBO BOX\' is of type \'{0}\'", comboBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'TEXT COMBO BOX\' column in the row number \'1\'", text2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'TEXT COMBO EMPTY\' is of type \'{0}\'", comboBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'TEXT COMBO EMPTY\' column in the row number \'1\'", text3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'TEXT COMBO SPINNER\' is of type \'{0}\'", comboBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'TEXT COMBO SPINNER\' column in the row number \'1\'", text4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'LNG FORMAT1\' is of type \'{0}\'", numericInteger), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'LNG FORMAT1\' column in the row number \'1\'", text5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'LNG FORMAT2\' is of type \'{0}\'", numericInteger), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'LNG FORMAT2\' column in the row number \'1\'", text5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'DBL CHECKBOX\' is of type \'{0}\'", checkBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the checkb" +
                            "ox cell is marked as \'{0}\' in the \'DBL CHECKBOX\' column in the row number \'1\'", falseFlag), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'DBL FORMAT1\' is of type \'{0}\'", numericDecimal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'DBL FORMAT1\' column in the row number \'1\'", text6), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'DBL FORMAT2\' is of type \'{0}\'", numericDecimal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'DBL FORMAT2\' column in the row number \'1\'", text7), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'DBL NO FORMAT\' is of type \'{0}\'", numericDecimal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'DBL NO FORMAT\' column in the row number \'1\'", text8), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'DATE CONTROL\' is of type \'{0}\'", date), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the value " +
                            "\'{0}\' in the \'DATE CONTROL\' column in the row number \'1\'", text9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And(string.Format("the user validates that the element \'SFA Products Activity Type Columns\' with val" +
                            "ue \'FLAG CONTROL\' is of type \'{0}\'", checkBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And(string.Format("the user validates that the \'SFA Products Activity Type\' multigrid has the checkb" +
                            "ox cell is marked as \'{0}\' in the \'FLAG CONTROL\' column in the row number \'1\'", trueFlag), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.When("the user clicks on \'Indexed Row Link\' with value containing \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 48
 testRunner.Then("the user is on the \'Main Information Tab\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 49
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
