// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.VisitsUI
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_771269")]
    public partial class TestCase_771269Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_771269.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/VisitsUI", "TestCase_771269", "\tTest Case 771269", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_SE_VISIT_011_ATTACHMENT_CONTENT_AND_SORTING_ON_CUSTOMER_ACTIVITIES_BDD")]
        [NUnit.Framework.CategoryAttribute("BDD_TC_771269")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        public virtual void WEB_SFA_SE_VISIT_011_ATTACHMENT_CONTENT_AND_SORTING_ON_CUSTOMER_ACTIVITIES_BDD()
        {
            string[] tagsOfScenario = new string[] {
                    "BDD_TC_771269",
                    "SFA_Nightly"};
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_SE_VISIT_011_ATTACHMENT_CONTENT_AND_SORTING_ON_CUSTOMER_ACTIVITIES_BDD", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Visits\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When("the user filters the column by column name \'Id Visit\', \'Like\', \'00000000000000021" +
                        "0518125521688\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Attachments\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.Then("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Visit\' in the \'Source\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 12
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'ATTACH_PPT.PPTX\' in the \'File name\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'ATTACH_PPT.PPTX\' in the \'Subject\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Visit\' in the \'Source\' column in the row number \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'CLASSICA%20_FUSILLI%201%20KG.JPG\' in the \'File name\' column in the row number" +
                        " \'2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'classica%20_fusilli%201%20kg.JPG\' in the \'Subject\' column in the row number \'" +
                        "2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Visit\' in the \'Source\' column in the row number \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'CLASSICA%20SAPGHETTI%20500%20GR.JPG\' in the \'File name\' column in the row num" +
                        "ber \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'classica%20sapghetti%20500%20gr.JPG\' in the \'Subject\' column in the row numbe" +
                        "r \'3\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Store check - Store check  attachment - (HQ)\' in the \'Source\' column in the r" +
                        "ow number \'4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'IMAGE_2020_10_05T14_14_31_654Z.PNG\' in the \'File name\' column in the row numb" +
                        "er \'4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'image_2020_10_05T14_14_31_654Z.png\' in the \'Subject\' column in the row number" +
                        " \'4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 27
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \' check - Store check  attachment - (HQ)\' in the \'Source\' column in the row nu" +
                        "mber \'5\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the link" +
                        " value \'https://it.wikipedia.org/wiki/File:Double-alaskan-rainbow.jpg\' in the \'F" +
                        "ile name\' column in the row number \'5\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'rainbow\' in the \'Subject\' column in the row number \'5\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Store check - Store check  attachment - (HQ)\' in the \'Source\' column in the r" +
                        "ow number \'6\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'CEREALI.JPG\' in the \'File name\' column in the row number \'6\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'CEREALS\' in the \'Subject\' column in the row number \'6\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Promo Check\' in the \'Source\' column in the row number \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'IMAGE_2020_04_30T14_29_11_674Z.PNG\' in the \'File name\' column in the row numb" +
                        "er \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'image_2020_04_30T14_29_11_674Z.png\' in the \'Subject\' column in the row number" +
                        " \'7\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Price Check\' in the \'Source\' column in the row number \'8\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'IMAGE_2020_04_30T14_29_50_782Z.PNG\' in the \'File name\' column in the row numb" +
                        "er \'8\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'image_2020_04_30T14_29_50_782Z.png\' in the \'Subject\' column in the row number" +
                        " \'8\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'Request\' in the \'Source\' column in the row number \'9\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'IMAGE_2020_04_30T14_30_50_238Z.PNG\' in the \'File name\' column in the row numb" +
                        "er \'9\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("the user validates that the \'Visits Attachments Tab\' singlegrid contains the valu" +
                        "e \'image_2020_04_30T14_30_50_238Z.png\' in the \'Subject\' column in the row number" +
                        " \'9\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
