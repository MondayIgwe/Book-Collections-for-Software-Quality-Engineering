// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.TPM.PromoActions
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_466025")]
    public partial class TestCase_466025Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_466025.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/TPM/PromoActions", "TestCase_466025", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_TPM_SP_PROMODOCUMENT_DIRECTCUSTOMERS_001")]
        [NUnit.Framework.CategoryAttribute("BDD_466025")]
        [NUnit.Framework.CategoryAttribute("PROMO_Nightly")]
        [NUnit.Framework.CategoryAttribute("PromoActions")]
        [NUnit.Framework.TestCaseAttribute("EC86178", "", "001", "002", "100", "200", "10", "EC86263", "EC86264", "EC86264", "EC86312", "70.00", "30.00", "80.00", "120.00", "EC86176", "02", "1000", "EC10045", "EC9985", "EC9975", "2.40", "3.60", "4.80", "1.20", "50", "1", "D001", "15", "054", "065", "070", "97.50", "52.50", "620.00", "054", "620", "EC86160", "EC86312", "022", null)]
        public virtual void WEB_TPM_SP_PROMODOCUMENT_DIRECTCUSTOMERS_001(
                    string cUSTOMER1, 
                    string dATE, 
                    string pROD1, 
                    string pROD2, 
                    string qTYEST1, 
                    string qTYEST1_2, 
                    string dISCPERC, 
                    string dCUST_1, 
                    string dCUST_2, 
                    string dCUST_3, 
                    string dCUST_4, 
                    string qTYCALC1, 
                    string qTYCALC2, 
                    string qTYCALC3, 
                    string qTYCALC4, 
                    string cHILD_OF_CUST, 
                    string fAMILY, 
                    string qTYEST2, 
                    string fAMILY_CUSTS2, 
                    string fAMILY_CUSTS3, 
                    string fAMILY_CUSTS4, 
                    string qTYCALC2_1, 
                    string qTYCALC2_2, 
                    string qTYCALC2_3, 
                    string qTYCALC2_4, 
                    string qTYEST3, 
                    string wEIGHT, 
                    string dISPLAY, 
                    string qTYESTDISPLAY, 
                    string pRODS4_1, 
                    string pRODS4_2, 
                    string pRODS4_3, 
                    string qTYCALC4_1, 
                    string qTYCALC4_2, 
                    string qTYCALC4_3, 
                    string dESCPROD4, 
                    string qTYEST4, 
                    string dCUST_4_1, 
                    string dCUST_4_2, 
                    string pROD3, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_466025",
                    "PROMO_Nightly",
                    "PromoActions"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CUSTOMER1", cUSTOMER1);
            argumentsOfScenario.Add("DATE", dATE);
            argumentsOfScenario.Add("PROD1", pROD1);
            argumentsOfScenario.Add("PROD2", pROD2);
            argumentsOfScenario.Add("QTYEST1", qTYEST1);
            argumentsOfScenario.Add("QTYEST1_2", qTYEST1_2);
            argumentsOfScenario.Add("DISCPERC", dISCPERC);
            argumentsOfScenario.Add("DCUST_1", dCUST_1);
            argumentsOfScenario.Add("DCUST_2", dCUST_2);
            argumentsOfScenario.Add("DCUST_3", dCUST_3);
            argumentsOfScenario.Add("DCUST_4", dCUST_4);
            argumentsOfScenario.Add("QTYCALC1", qTYCALC1);
            argumentsOfScenario.Add("QTYCALC2", qTYCALC2);
            argumentsOfScenario.Add("QTYCALC3", qTYCALC3);
            argumentsOfScenario.Add("QTYCALC4", qTYCALC4);
            argumentsOfScenario.Add("CHILD_OF_CUST", cHILD_OF_CUST);
            argumentsOfScenario.Add("FAMILY", fAMILY);
            argumentsOfScenario.Add("QTYEST2", qTYEST2);
            argumentsOfScenario.Add("FAMILY_CUSTS2", fAMILY_CUSTS2);
            argumentsOfScenario.Add("FAMILY_CUSTS3", fAMILY_CUSTS3);
            argumentsOfScenario.Add("FAMILY_CUSTS4", fAMILY_CUSTS4);
            argumentsOfScenario.Add("QTYCALC2_1", qTYCALC2_1);
            argumentsOfScenario.Add("QTYCALC2_2", qTYCALC2_2);
            argumentsOfScenario.Add("QTYCALC2_3", qTYCALC2_3);
            argumentsOfScenario.Add("QTYCALC2_4", qTYCALC2_4);
            argumentsOfScenario.Add("QTYEST3", qTYEST3);
            argumentsOfScenario.Add("WEIGHT", wEIGHT);
            argumentsOfScenario.Add("DISPLAY", dISPLAY);
            argumentsOfScenario.Add("QTYESTDISPLAY", qTYESTDISPLAY);
            argumentsOfScenario.Add("PRODS4_1", pRODS4_1);
            argumentsOfScenario.Add("PRODS4_2", pRODS4_2);
            argumentsOfScenario.Add("PRODS4_3", pRODS4_3);
            argumentsOfScenario.Add("QTYCALC4_1", qTYCALC4_1);
            argumentsOfScenario.Add("QTYCALC4_2", qTYCALC4_2);
            argumentsOfScenario.Add("QTYCALC4_3", qTYCALC4_3);
            argumentsOfScenario.Add("DESCPROD4", dESCPROD4);
            argumentsOfScenario.Add("QTYEST4", qTYEST4);
            argumentsOfScenario.Add("DCUST_4_1", dCUST_4_1);
            argumentsOfScenario.Add("DCUST_4_2", dCUST_4_2);
            argumentsOfScenario.Add("PROD3", pROD3);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_TPM_SP_PROMODOCUMENT_DIRECTCUSTOMERS_001", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user has logged in with division \'XTEL SFA AUTOMATION - Global Group SM1V4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When("the user navigates to the \'Promotional actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 10
 testRunner.And(string.Format("the user creates a Promo \'Level 4\' \'{0}\'", cUSTOMER1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.And(string.Format("the user populates the cockpit \'Indirect Customer Promo 1\' \'d+1/m/y\' \'d+15/m/y\' \'" +
                            "{0}\' \'{0}\' \'Trade Price Reduction (%)\'", dATE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And(string.Format("the user adds a product \'Product\' \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("the user adds a product \'Product\' \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST1, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST1_2, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'% Cut Price\' for product code \'{1}\'", dISCPERC, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'% Cut Price\' for product code \'{1}\'", dISCPERC, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Cockpit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user retrieves text from element \'Input By Label Name\' with value \'Action Id\'" +
                        " and saves it as \'ActionId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("the user clicks on the \'Refresh Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user filters the column by column name \'Action Id\', \'Equal\', \'ActionId\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("the user clicks on \'Button\' with value \'Edit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("the user clicks on \'Top Tab\' with value \'Direct Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.Then("the user validates that the \'Element by SM1Id\' with value \'CODPRODUCT\' is present" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 32
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'ALLOCATION_WEIGHT\' is " +
                        "present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'QTYESTIMATED\' is prese" +
                        "nt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'BASELINE_IMPORTED\' is " +
                        "present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'UPLIFT_CALC\' is presen" +
                        "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'UM\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'GROSSSALESREVENUE\' is " +
                        "present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'PREPROMOPRICE\' is pres" +
                        "ent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'PREPROMOREVENUE\' is pr" +
                        "esent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'DISC_PERC\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 42
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_1, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_2, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'70.00\' " +
                            "for \'Estimated quantity\'", dCUST_1, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'30.00\' " +
                            "for \'Estimated quantity\'", dCUST_2, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_3, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_4, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'80.00\' " +
                            "for \'Estimated quantity\'", dCUST_3, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'120.00\'" +
                            " for \'Estimated quantity\'", dCUST_4, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.When("the user clicks on \'Top Tab\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 56
 testRunner.And("the user clicks on the \'Product Grid Select Measures\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("the user clicks on \'List\' with value \'All\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.Then(string.Format("the user validates text contains \'100.00\' on column name \'Gross Sales Revenue\' fo" +
                            "r product code \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 60
 testRunner.And(string.Format("the user validates text contains \'1.00\' on column name \'Pre Promo Price\' for prod" +
                            "uct code \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And(string.Format("the user validates text contains \'400.00\' on column name \'Gross Sales Revenue\' fo" +
                            "r product code \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.And(string.Format("the user validates text contains \'2.00\' on column name \'Pre Promo Price\' for prod" +
                            "uct code \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.When("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 67
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
 testRunner.And("the user clicks on \'Button Link\' with value \'Copy action\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.And(string.Format("the user selects a customer \'Level 3\' \'{0}\'", cHILD_OF_CUST), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 72
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST1, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 76
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST1_2, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 77
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'% Cut Price\' for product code \'{1}\'", dISCPERC, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'% Cut Price\' for product code \'{1}\'", dISCPERC, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("the user clicks on \'Top Tab\' with value \'Direct Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 81
 testRunner.Then("the user validates that the \'Element by SM1Id\' with value \'CODPRODUCT\' is present" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 82
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'ALLOCATION_WEIGHT\' is " +
                        "present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'QTYESTIMATED\' is prese" +
                        "nt", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'BASELINE_IMPORTED\' is " +
                        "present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 85
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'UPLIFT_CALC\' is presen" +
                        "t", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'UM\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'GROSSSALESREVENUE\' is " +
                        "present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'PREPROMOPRICE\' is pres" +
                        "ent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 89
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'PREPROMOREVENUE\' is pr" +
                        "esent", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And("the user validates that the \'Element by SM1Id\' with value \'DISC_PERC\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_1, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 93
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_2, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'70.00\' " +
                            "for \'Estimated quantity\'", dCUST_1, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 96
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'30.00\' " +
                            "for \'Estimated quantity\'", dCUST_2, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 98
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_3, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_4, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'80.00\' " +
                            "for \'Estimated quantity\'", dCUST_3, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'120.00\'" +
                            " for \'Estimated quantity\'", dCUST_4, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 104
 testRunner.When("the user clicks on \'Top Tab\' with value \'Products\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 106
 testRunner.And("the user clicks on the \'Product Grid Select Measures\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 107
 testRunner.And("the user clicks on \'List\' with value \'All\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 108
 testRunner.Then(string.Format("the user validates text contains \'100.00\' on column name \'Gross Sales Revenue\' fo" +
                            "r product code \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 110
 testRunner.And(string.Format("the user validates text contains \'1.00\' on column name \'Pre Promo Price\' for prod" +
                            "uct code \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 112
 testRunner.And(string.Format("the user validates text contains \'400.00\' on column name \'Gross Sales Revenue\' fo" +
                            "r product code \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.And(string.Format("the user validates text contains \'2.00\' on column name \'Pre Promo Price\' for prod" +
                            "uct code \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 116
 testRunner.When("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
 testRunner.And("the user creates a Promo \'Level 1\' \'EC86851\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
 testRunner.And(string.Format("the user populates the cockpit \'Indirect Customer Promo 2\' \'d+1/m/y\' \'d+15/m/y\' \'" +
                            "{0}\' \'{0}\' \'Trade Price Reduction (%)\'", dATE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 120
 testRunner.And(string.Format("the user adds a product \'Product\' \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
 testRunner.And(string.Format("the user adds a product \'Product\' \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'General info\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("the user clicks on \'Top Tab\' with value \'Header info\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 124
 testRunner.And("the user selects active scenario \'Level 1\' from dropdown list \'Participants level" +
                        "\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And(string.Format("the user adds a product \'Family\' \'{0}\'", fAMILY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 128
 testRunner.And("the user clicks on the \'Product Grid Select Measures\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.And("the user clicks on \'List\' with value \'All\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'02 - " +
                            "ITALIAN RED\'", qTYEST2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'% Cut Price\' for product code \'{1}\'", dISCPERC, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 133
 testRunner.And("the user clicks on \'Top Tab\' with value \'Direct Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 135
 testRunner.Then(string.Format("the user validates that the customer \'EC10044\' under product \'{0}\' is present", pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 136
 testRunner.And(string.Format("the user validates that the customer \'EC10045\' under product \'{0}\' is present", pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", fAMILY_CUSTS3, pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 138
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", fAMILY_CUSTS4, pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 140
 testRunner.And(string.Format("the user validates that the customer \'EC10044\' under product \'{0}\' has value \'0.2" +
                            "0\' for \'Weight\'", pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And(string.Format("the user validates that the customer \'EC10045\' under product \'{0}\' has value \'0.3" +
                            "0\' for \'Weight\'", pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'0.40\' f" +
                            "or \'Weight\'", fAMILY_CUSTS3, pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 143
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'0.10\' f" +
                            "or \'Weight\'", fAMILY_CUSTS4, pROD3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 145
 testRunner.And(string.Format("the user validates that the customer \'EC10044\' under product \'{0}\' has value \'{1}" +
                            "\' for \'Estimated quantity\'", pROD3, qTYCALC2_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 146
 testRunner.And(string.Format("the user validates that the customer \'EC10045\' under product \'{0}\' has value \'{1}" +
                            "\' for \'Estimated quantity\'", pROD3, qTYCALC2_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'{2}\' fo" +
                            "r \'Estimated quantity\'", fAMILY_CUSTS3, pROD3, qTYCALC2_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 148
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'{2}\' fo" +
                            "r \'Estimated quantity\'", fAMILY_CUSTS4, pROD3, qTYCALC2_4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 150
 testRunner.And("values for product grid and direct customers tab are the same", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 152
 testRunner.When("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 154
 testRunner.And("the user creates a Promo \'Level 5\' \'EC86162\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 156
 testRunner.And(string.Format("the user populates the cockpit \'direct Customer Promo 3\' \'d+1/m/y\' \'d+15/m/y\' \'{0" +
                            "}\' \'{0}\' \'Trade Price Reduction (%)\'", dATE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 157
 testRunner.And(string.Format("the user adds a product \'Product\' \'{0}\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 158
 testRunner.And(string.Format("the user adds a product \'Product\' \'{0}\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST3, pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 160
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST3, pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
 testRunner.And("the user clicks on \'Top Tab\' with value \'Direct Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
 testRunner.Then(string.Format("the user validates that product \'{0}\' has \'1\' customers", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 164
 testRunner.And(string.Format("the user validates that the customer \'EC86162\' under product \'{0}\' has value \'1.0" +
                            "0\' for \'Weight\'", pROD1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 165
 testRunner.And(string.Format("the user validates that the customer \'EC86162\' under product \'{0}\' has value \'1.0" +
                            "0\' for \'Weight\'", pROD2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 167
 testRunner.When("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 169
 testRunner.And("the user creates a Promo \'Level 4\' \'EC86164\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 170
 testRunner.And(string.Format("the user populates the cockpit \'Indirect Customer Promo 3\' \'d+1/m/y\' \'d+15/m/y\' \'" +
                            "{0}\' \'{0}\' \'Trade Price Reduction (%)\'", dATE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 171
 testRunner.And(string.Format("the user adds a product \'Display\' \'{0}\'", dISPLAY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Display estimated quantity\' for product cod" +
                            "e \'D001 - DISPLAY COCKTAIL\'", qTYESTDISPLAY), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.Then(string.Format("the user validates that the \'Text Containing\' with value \'{0}\' is present", pRODS4_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 174
 testRunner.And(string.Format("the user validates that the \'Text Containing\' with value \'{0}\' is present", pRODS4_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 175
 testRunner.And(string.Format("the user validates that the \'Text Containing\' with value \'{0}\' is present", pRODS4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 176
 testRunner.And(string.Format("the user validates text contains \'150\' on column name \'Estimated quantity\' for pr" +
                            "oduct code \'{0}\'", pRODS4_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 177
 testRunner.And(string.Format("the user validates text contains \'150\' on column name \'Estimated quantity\' for pr" +
                            "oduct code \'{0}\'", pRODS4_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 178
 testRunner.And(string.Format("the user validates text contains \'150\' on column name \'Estimated quantity\' for pr" +
                            "oduct code \'{0}\'", pRODS4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 180
 testRunner.When(string.Format("the user adds a product \'Product\' \'{0}\'", dESCPROD4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 181
 testRunner.And(string.Format("the user enters \'{0}\' on column name \'Estimated quantity\' for product code \'{1}\'", qTYEST4, dESCPROD4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 183
 testRunner.And("the user clicks on \'Top Tab\' with value \'Direct Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 185
 testRunner.Then(string.Format("the user validates product \'{0}\' with \'Estimated quantity\' of \'150.00\' has \'2\' cu" +
                            "stomers", pRODS4_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 187
 testRunner.And(string.Format("the user validates product \'{0}\' with \'Estimated quantity\' of \'{1}\' has \'1\' custo" +
                            "mers", pRODS4_1, qTYCALC4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 188
 testRunner.And(string.Format("the user validates product \'{0}\' with \'Estimated quantity\' of \'{1}\' has \'1\' custo" +
                            "mers", pRODS4_1, qTYCALC4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 190
 testRunner.And(string.Format("the user validates the customer \'{0}\' under product \'{1}\' with \'Estimated quantit" +
                            "y\' of \'150.00\' is present", dCUST_4, pRODS4_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 191
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_4, pRODS4_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 192
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' is present", dCUST_4, pRODS4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 194
 testRunner.And(string.Format("the user validates the customer \'{0}\' under product \'{1}\' with \'Estimated quantit" +
                            "y\' of \'150.00\' has value \'97.50\' for \'Estimated quantity\'", dCUST_4_1, pRODS4_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 195
 testRunner.And(string.Format("the user validates the customer \'{0}\' under product \'{1}\' with \'Estimated quantit" +
                            "y\' of \'150.00\' has value \'52.50\' for \'Estimated quantity\'", dCUST_4, pRODS4_1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 196
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'97.50\' " +
                            "for \'Estimated quantity\'", dCUST_4_1, pRODS4_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 197
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'52.50\' " +
                            "for \'Estimated quantity\'", dCUST_4, pRODS4_2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 198
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'97.50\' " +
                            "for \'Estimated quantity\'", dCUST_4_1, pRODS4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 199
 testRunner.And(string.Format("the user validates that the customer \'{0}\' under product \'{1}\' has value \'52.50\' " +
                            "for \'Estimated quantity\'", dCUST_4, pRODS4_3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 201
 testRunner.And("the user closes all pages without saving the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
