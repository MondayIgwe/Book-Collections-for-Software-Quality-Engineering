// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.CustomerMaster
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_535562")]
    public partial class TestCase_535562Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_535562.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/CustomerMaster", "TestCase_535562", "\tTest Case 535562", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("TC_535562_WEB_SFA_MD_CUST_UI_018_POS_TAB")]
        [NUnit.Framework.CategoryAttribute("BDD_535562")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        [NUnit.Framework.TestCaseAttribute("New customer", "Ship to and point of Sales", "10003052", "CUST_UI_018", "Strada Palat", "Austria", "No seasonality", "88", "E35", "pos niels", "3444", "2345", "456", "56", "766", "333", "212", "Ship-to Customers", "Ship-to customer", "False", null)]
        public virtual void TC_535562_WEB_SFA_MD_CUST_UI_018_POS_TAB(
                    string customerAction1, 
                    string customerType, 
                    string billTo, 
                    string custName, 
                    string address, 
                    string country, 
                    string season, 
                    string potentialIndex, 
                    string pOSCode, 
                    string pOSName, 
                    string total, 
                    string totalFood, 
                    string totalNoFood, 
                    string desks, 
                    string deskEquip, 
                    string totalEmpl, 
                    string shelfMeters, 
                    string title, 
                    string attribute, 
                    string val, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_535562",
                    "SFA_Nightly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("CustomerAction1", customerAction1);
            argumentsOfScenario.Add("CustomerType", customerType);
            argumentsOfScenario.Add("BillTo", billTo);
            argumentsOfScenario.Add("CustName", custName);
            argumentsOfScenario.Add("Address", address);
            argumentsOfScenario.Add("Country", country);
            argumentsOfScenario.Add("Season", season);
            argumentsOfScenario.Add("PotentialIndex", potentialIndex);
            argumentsOfScenario.Add("POSCode", pOSCode);
            argumentsOfScenario.Add("POSName", pOSName);
            argumentsOfScenario.Add("Total", total);
            argumentsOfScenario.Add("TotalFood", totalFood);
            argumentsOfScenario.Add("TotalNoFood", totalNoFood);
            argumentsOfScenario.Add("Desks", desks);
            argumentsOfScenario.Add("DeskEquip", deskEquip);
            argumentsOfScenario.Add("TotalEmpl", totalEmpl);
            argumentsOfScenario.Add("ShelfMeters", shelfMeters);
            argumentsOfScenario.Add("Title", title);
            argumentsOfScenario.Add("Attribute", attribute);
            argumentsOfScenario.Add("Val", val);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("TC_535562_WEB_SFA_MD_CUST_UI_018_POS_TAB", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.Given("the user navigates to the \'Customer Master\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 8
 testRunner.When(string.Format("the user adds a new Customer Master where Action: \'{0}\', Customer Type: \'{1}\', Bi" +
                            "ll-To: \'{2}\'", customerAction1, customerType, billTo), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 11
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Customer Name\'", custName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Address\'", address), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 13
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Country\'", country), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("the user clicks on \'Top Tab\' with value \'Point of Sale\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 18
 testRunner.Then("the user validates that the \'Section\' with value \'Point of Sale\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 20
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Cluster Nielsen\' is" +
                        " visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
    testRunner.And("the user validates that the \'Input By Label Name\' with value \'Cluster Nielsen\' is" +
                        " enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
    testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Cluster Nielsen\' is not " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Internal Cluster\' i" +
                        "s visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Internal Cluster\' i" +
                        "s enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Internal Cluster\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("the user validates that the \'Section\' with value \'Seasonality\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Seasonality\' is vis" +
                        "ible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Seasonality\' is ena" +
                        "bled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Seasonality\' is not disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'Seasonality\' has text \'" +
                            "{0}\'", season), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Start Closure Month" +
                        "\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 36
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Start Closure Month" +
                        "\' is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Start Closure Month\' is " +
                        "not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Start Closure Day\' " +
                        "is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Start Closure Day\' " +
                        "is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Start Closure Day\' is no" +
                        "t displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'End Closure Month\' " +
                        "is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'End Closure Month\' " +
                        "is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 45
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'End Closure Month\' is no" +
                        "t displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'End Closure Day\' is" +
                        " visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'End Closure Day\' is" +
                        " enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'End Closure Day\' is not " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 51
 testRunner.And("the user validates that the \'Section\' with value \'Nielsen Information\' is visible" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Potential Index\' is" +
                        " visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Potential Index\' is" +
                        " enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Potential Index\' is not " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 57
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Nielsen POS Code\' i" +
                        "s visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Nielsen POS Code\' i" +
                        "s enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Nielsen POS Code\' is not" +
                        " displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Nielsen POS\' is vis" +
                        "ible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Nielsen POS\' is ena" +
                        "bled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 63
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Nielsen POS\' is not disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 65
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Sale Surface\'" +
                        " is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 66
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Sale Surface\'" +
                        " is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 67
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Total Sale Surface\' is n" +
                        "ot displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 69
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Food Surface\'" +
                        " is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 70
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total Food Surface\'" +
                        " is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 71
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Total Food Surface\' is n" +
                        "ot displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 73
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total No Food Surfa" +
                        "ce\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 74
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Total No Food Surfa" +
                        "ce\' is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 75
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Total No Food Surface\' i" +
                        "s not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 78
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Cash Desks Nr.\' is " +
                        "visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 79
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Cash Desks Nr.\' is " +
                        "enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 80
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Cash Desks Nr.\' is not d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 82
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Equipped Cash Desks" +
                        " Nr.\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 83
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Equipped Cash Desks" +
                        " Nr.\' is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 84
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Equipped Cash Desks Nr.\'" +
                        " is not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 86
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Shelf Linear  Meter" +
                        "s\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 87
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Employees Total\' is" +
                        " enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 88
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Shelf Linear  Meters\' is" +
                        " not displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 90
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Employees Total\' is" +
                        " visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 91
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Shelf Linear  Meter" +
                        "s\' is enabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 92
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'Employees Total\' is not " +
                        "displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 95
 testRunner.When("the user clicks on \'Top Tab\' with value \'Product Lines\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 97
 testRunner.Then("the user validates that the \'Column\' with value \'Category Code\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 98
 testRunner.And("the user validates that the \'Column\' with value \'Potential Index\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 99
 testRunner.And("the user validates that the \'Column\' with value \'Category role in the POS\' is vis" +
                        "ible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 100
 testRunner.And("the user validates that the \'Column\' with value \'Shelf Linear  Meters\' is visible" +
                        "", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 101
 testRunner.And("the user validates that the \'Column\' with value \'Equipped cash desks nr\' is visib" +
                        "le", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 102
 testRunner.And("the user validates that the \'Column\' with value \'Retailer cluster\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 105
 testRunner.When("the user clicks on \'Top Tab\' with value \'Ship-to Customers\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 107
 testRunner.Then("the user validates that the \'Column\' with value \'Ship-to code\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 108
 testRunner.And("the user validates that the \'Column\' with value \'Ship-to customer\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 109
 testRunner.And("the user validates that the \'Column\' with value \'Primary\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 110
 testRunner.And("the user validates that the \'Column\' with value \'Cancelled\' is visible", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 113
 testRunner.And(string.Format("the user validates that the \'Ship To Customers Sub Tab Grid\' singlegrid contains " +
                            "the span value \'{0}\' in the \'Ship-to customer\' column in the row number \'1\'", custName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 114
 testRunner.And("the user validates that the \'Ship To Customers Sub Tab Grid\' singlegrid has the c" +
                        "heckbox cell is marked as \'on\' in the \'Primary\' column in the row number \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 117
 testRunner.When("the user clicks on \'Input By Label Name\' with value \'Potential Index\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 118
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Potential Index\'" +
                            "", potentialIndex), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 119
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 121
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Nielsen POS Code\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 122
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Nielsen POS Code" +
                            "\'", pOSCode), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 123
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 125
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Nielsen POS\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 126
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Nielsen POS\'", pOSName), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 127
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 129
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Total Sale Surface\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 130
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Total Sale Surfa" +
                            "ce\'", total), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 131
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 133
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Total Food Surface\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 134
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Total Food Surfa" +
                            "ce\'", totalFood), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 135
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 137
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Total No Food Surface\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 138
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Total No Food Su" +
                            "rface\'", totalNoFood), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 139
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 141
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Cash Desks Nr.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 142
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Cash Desks Nr.\'", desks), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 143
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 145
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Equipped Cash Desks Nr.\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 146
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Equipped Cash De" +
                            "sks Nr.\'", deskEquip), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 147
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 149
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Employees Total\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 150
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Employees Total\'" +
                            "", totalEmpl), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 151
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 153
 testRunner.And("the user clicks on \'Input By Label Name\' with value \'Shelf Linear  Meters\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 154
 testRunner.And(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Shelf Linear  Me" +
                            "ters\'", shelfMeters), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 155
 testRunner.And("the user moves the focus away from the element", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 158
 testRunner.And("the user clicks on the \'Add Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 159
 testRunner.And(string.Format("the user opens the Grid Settings Menu option: \'Columns\' in the \'{0}\' pop up table" +
                            "", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 160
 testRunner.And(string.Format("the user filter the pop up menu: \'Columns Settings\' by column name \'Caption\', \'Li" +
                            "ke\', \'{0}\'", attribute), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 161
 testRunner.And(string.Format("the user clicks on \'Columns Settings\' pop up table where \'Caption\' column has the" +
                            " value:\'{0}\' and the checkbox is in column:\'Visible\' is turned:\'on\'", attribute), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 162
 testRunner.And("the user clicks on \'Popup Ok Button\' with value \'Columns Settings\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 163
 testRunner.Then(string.Format("the user scrolls to the \'{0}\' column in the \'{1}\' pop-up table", attribute, title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 165
 testRunner.When(string.Format("the user filters the pop up menu: \'{0}\' by column name \'{1}\' for the checkbox sta" +
                            "te: \'{2}\'", title, attribute, val), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 166
 testRunner.Then(string.Format("the user validates that \'Pop Up Toolbar Grid Record Count\' with value \'{0}\' has t" +
                            "ext \'0/0\'", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 169
 testRunner.When(string.Format("the user opens the Grid Settings Menu option: \'Remove Filter\' in the \'{0}\' pop up" +
                            " table", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 170
 testRunner.And(string.Format("the user selects row \'1\' on the \'{0}\' pop up table", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 171
 testRunner.And(string.Format("the user selects row \'2\' on the \'{0}\' pop up table", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 172
 testRunner.And(string.Format("the user selects row \'3\' on the \'{0}\' pop up table", title), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 173
 testRunner.And("the user clicks on \'Popup Button\' with value \'OK\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 174
 testRunner.Then("\'Toolbar Grid Record Count\' is populated with \'0/4\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 177
 testRunner.When("the user clicks on \'Button\' with value \'Save\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 178
 testRunner.And("the user closes the page and saves the work done", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
