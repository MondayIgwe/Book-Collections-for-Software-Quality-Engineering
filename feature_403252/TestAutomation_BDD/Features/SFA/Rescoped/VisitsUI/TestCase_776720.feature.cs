// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.SFA.Rescoped.VisitsUI
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_776720")]
    public partial class TestCase_776720Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_776720.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/SFA/Rescoped/VisitsUI", "TestCase_776720", "\tTest case: 776720", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_SFA_SE_VISIT_004_MEASURES_SHOWN_IN_CUSTOMER_ACTIVITY_BDD")]
        [NUnit.Framework.CategoryAttribute("BDD_776720")]
        [NUnit.Framework.CategoryAttribute("SFA_Nightly")]
        [NUnit.Framework.TestCaseAttribute("000000000000000001621945546021", "text box", "combo box", "check box", "date", "numeric decimal", "numeric integer", "Test text field", "% Discount on Order Head", "BACIOCK", "Monday", "96,545,247", "96,545,247.3457", "96,545,247.35", "96,545,247.34567", "05/26/2021", "AbcdefG", "96,545,247", "off", "on", null)]
        public virtual void WEB_SFA_SE_VISIT_004_MEASURES_SHOWN_IN_CUSTOMER_ACTIVITY_BDD(
                    string filterValue, 
                    string textBox, 
                    string comboBox, 
                    string checkBox, 
                    string date, 
                    string @decimal, 
                    string integer, 
                    string text1, 
                    string text2, 
                    string text3, 
                    string text4, 
                    string text5, 
                    string text6, 
                    string text7, 
                    string text8, 
                    string text9, 
                    string textValue, 
                    string text10, 
                    string @false, 
                    string @true, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_776720",
                    "SFA_Nightly"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("FilterValue", filterValue);
            argumentsOfScenario.Add("TextBox", textBox);
            argumentsOfScenario.Add("ComboBox", comboBox);
            argumentsOfScenario.Add("CheckBox", checkBox);
            argumentsOfScenario.Add("Date", date);
            argumentsOfScenario.Add("Decimal", @decimal);
            argumentsOfScenario.Add("Integer", integer);
            argumentsOfScenario.Add("Text1", text1);
            argumentsOfScenario.Add("Text2", text2);
            argumentsOfScenario.Add("Text3", text3);
            argumentsOfScenario.Add("Text4", text4);
            argumentsOfScenario.Add("Text5", text5);
            argumentsOfScenario.Add("Text6", text6);
            argumentsOfScenario.Add("Text7", text7);
            argumentsOfScenario.Add("Text8", text8);
            argumentsOfScenario.Add("Text9", text9);
            argumentsOfScenario.Add("TextValue", textValue);
            argumentsOfScenario.Add("Text10", text10);
            argumentsOfScenario.Add("False", @false);
            argumentsOfScenario.Add("True", @true);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_SFA_SE_VISIT_004_MEASURES_SHOWN_IN_CUSTOMER_ACTIVITY_BDD", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 5
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 6
 testRunner.Given("the user navigates to the \'Visits\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Given ");
#line hidden
#line 7
 testRunner.When(string.Format("the user filters the column by column name \'Id Visit\', \'Like\', \'{0}\'", filterValue), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Customer activity type\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 11
 testRunner.Then("the user validates that the \'Customer Activity Type General Data Section\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 13
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'TEXT BOX\' is displayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 14
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'TEXT BOX\' i" +
                            "s of type \'{0}\'", textBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'TEXT COMBO BOX\' is displ" +
                        "ayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 17
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'TEXT COMBO " +
                            "BOX\' is of type \'{0}\'", comboBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 19
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'TEXT COMBO EMPTY\' is dis" +
                        "played", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'TEXT COMBO " +
                            "EMPTY\' is of type \'{0}\'", comboBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'TEXT COMBO SPINNER\' is d" +
                        "isplayed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'TEXT COMBO " +
                            "SPINNER\' is of type \'{0}\'", comboBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'LNG FORMAT1" +
                            "\' is of type \'{0}\'", integer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'LNG FORMAT2" +
                            "\' is of type \'{0}\'", integer), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 28
 testRunner.And("the user validates that the \'Checkbox By Label\' with value \'DBL CHECKBOX\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And(string.Format("the user validates that the element \'Checkbox By Label\' with value \'DBL CHECKBOX\'" +
                            " is of type \'{0}\'", checkBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 31
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'DBL FORMAT1\' is displaye" +
                        "d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 32
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'DBL FORMAT1" +
                            "\' is of type \'{0}\'", @decimal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 34
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'DBL FORMAT2\' is displaye" +
                        "d", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'DBL FORMAT2" +
                            "\' is of type \'{0}\'", @decimal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 37
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'DBL NO FORMAT\' is displa" +
                        "yed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 38
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'DBL NO FORM" +
                            "AT\' is of type \'{0}\'", @decimal), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 40
 testRunner.And("the user validates that the \'Mandatory Icon\' with value \'DATE CONTROL\' is display" +
                        "ed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.And(string.Format("the user validates that the element \'Input By Label Name\' with value \'DATE CONTRO" +
                            "L\' is of type \'{0}\'", date), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 43
 testRunner.And("the user validates that the \'Checkbox By Label\' with value \'FLAG CONTROL\' is disp" +
                        "layed", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 44
 testRunner.And(string.Format("the user validates that the element \'Checkbox By Label\' with value \'FLAG CONTROL\'" +
                            " is of type \'{0}\'", checkBox), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'TEXT BOX\' has text \'{0}" +
                            "\'", text1), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'TEXT COMBO BOX\' has tex" +
                            "t \'{0}\'", text2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 49
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'TEXT COMBO EMPTY\' has t" +
                            "ext \'{0}\'", text3), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'TEXT COMBO SPINNER\' has" +
                            " text \'{0}\'", text4), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'LNG FORMAT1\' has text \'" +
                            "{0}\'", text5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'LNG FORMAT2\' has text \'" +
                            "{0}\'", text5), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'DBL FORMAT1\' has text \'" +
                            "{0}\'", text6), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'DBL FORMAT2\' has text \'" +
                            "{0}\'", text7), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'DBL NO FORMAT\' has text" +
                            " \'{0}\'", text8), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 59
 testRunner.And(string.Format("the user validates that \'Input By Label Name\' with value \'DATE CONTROL\' has text " +
                            "\'{0}\'", text9), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 61
 testRunner.And(string.Format("the user validates that the checkbox container \'sm1-tr contianer\' with value \'DBL" +
                            " CHECKBOX\' is set to the state: \'{0}\'", @false), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 62
 testRunner.And(string.Format("the user validates that the checkbox container \'sm1-tr contianer\' with value \'FLA" +
                            "G CONTROL\' is set to the state: \'{0}\'", @true), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 64
 testRunner.When(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'LNG FORMAT1\'", text10), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 65
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'LNG FORMAT1\' has text \'" +
                            "{0}\'", text10), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 67
 testRunner.And("the user closes all pages without saving the work done where there is no pop up", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
