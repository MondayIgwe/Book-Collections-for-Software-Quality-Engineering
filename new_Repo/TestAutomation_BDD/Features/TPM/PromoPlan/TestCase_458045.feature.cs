// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (https://www.specflow.org/).
//      SpecFlow Version:3.9.0.0
//      SpecFlow Generator Version:3.9.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace Kantar_BDD.Features.TPM.PromoPlan
{
    using TechTalk.SpecFlow;
    using System;
    using System.Linq;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "3.9.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [NUnit.Framework.TestFixtureAttribute()]
    [NUnit.Framework.DescriptionAttribute("TestCase_458045")]
    public partial class TestCase_458045Feature
    {
        
        private TechTalk.SpecFlow.ITestRunner testRunner;
        
        private string[] _featureTags = ((string[])(null));
        
#line 1 "TestCase_458045.feature"
#line hidden
        
        [NUnit.Framework.OneTimeSetUpAttribute()]
        public virtual void FeatureSetup()
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner();
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "Features/TPM/PromoPlan", "TestCase_458045", null, ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [NUnit.Framework.OneTimeTearDownAttribute()]
        public virtual void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [NUnit.Framework.SetUpAttribute()]
        public virtual void TestInitialize()
        {
        }
        
        [NUnit.Framework.TearDownAttribute()]
        public virtual void TestTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioInitialize(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioInitialize(scenarioInfo);
            testRunner.ScenarioContext.ScenarioContainer.RegisterInstanceAs<NUnit.Framework.TestContext>(NUnit.Framework.TestContext.CurrentContext);
        }
        
        public virtual void ScenarioStart()
        {
            testRunner.OnScenarioStart();
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [NUnit.Framework.TestAttribute()]
        [NUnit.Framework.DescriptionAttribute("WEB_TPM_SP_PROMOPLANDOCUMENT_DRAGDROP_CREATENEW_PROMO_001")]
        [NUnit.Framework.CategoryAttribute("BDD_458045")]
        [NUnit.Framework.CategoryAttribute("PROMO_Nightly")]
        [NUnit.Framework.CategoryAttribute("PromoPlan")]
        [NUnit.Framework.TestCaseAttribute("XTEL TPM AUTOMATION - Global Group SM1V4", "EC94002", "Holder Level", "Level 3", "DRAFT NATIONAL PROMO", "NEW DRAFT NATIONAL PROMO", "d/06/2020", "x/x/2020", "d+20/06/2020", "TPR in %", "052", "053", "Product", "MIRENE VINHO VERDE 0.75 lt", "MIRENE VINHO VERDE 1.5 lt", "", "", null)]
        public virtual void WEB_TPM_SP_PROMOPLANDOCUMENT_DRAGDROP_CREATENEW_PROMO_001(
                    string dIVISION, 
                    string pPHOLDER, 
                    string cONFLEV, 
                    string pPHOLDERLEV, 
                    string dESCR_NATIONAL, 
                    string dESCR_NATIONAL2, 
                    string sELLINSTART, 
                    string rEFYEAR, 
                    string sELLINEND, 
                    string mECH, 
                    string pRODCODE, 
                    string pRODCODE2, 
                    string pRODLEVEL, 
                    string dESC, 
                    string dESC2, 
                    string sELLOUTSTART, 
                    string sELLOUTEND, 
                    string[] exampleTags)
        {
            string[] @__tags = new string[] {
                    "BDD_458045",
                    "PROMO_Nightly",
                    "PromoPlan"};
            if ((exampleTags != null))
            {
                @__tags = System.Linq.Enumerable.ToArray(System.Linq.Enumerable.Concat(@__tags, exampleTags));
            }
            string[] tagsOfScenario = @__tags;
            System.Collections.Specialized.OrderedDictionary argumentsOfScenario = new System.Collections.Specialized.OrderedDictionary();
            argumentsOfScenario.Add("DIVISION", dIVISION);
            argumentsOfScenario.Add("PPHOLDER", pPHOLDER);
            argumentsOfScenario.Add("CONFLEV", cONFLEV);
            argumentsOfScenario.Add("PPHOLDERLEV", pPHOLDERLEV);
            argumentsOfScenario.Add("DESCR_NATIONAL", dESCR_NATIONAL);
            argumentsOfScenario.Add("DESCR_NATIONAL2", dESCR_NATIONAL2);
            argumentsOfScenario.Add("SELLINSTART", sELLINSTART);
            argumentsOfScenario.Add("REFYEAR", rEFYEAR);
            argumentsOfScenario.Add("SELLINEND", sELLINEND);
            argumentsOfScenario.Add("MECH", mECH);
            argumentsOfScenario.Add("PRODCODE", pRODCODE);
            argumentsOfScenario.Add("PRODCODE2", pRODCODE2);
            argumentsOfScenario.Add("PRODLEVEL", pRODLEVEL);
            argumentsOfScenario.Add("DESC", dESC);
            argumentsOfScenario.Add("DESC2", dESC2);
            argumentsOfScenario.Add("SELLOUTSTART", sELLOUTSTART);
            argumentsOfScenario.Add("SELLOUTEND", sELLOUTEND);
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("WEB_TPM_SP_PROMOPLANDOCUMENT_DRAGDROP_CREATENEW_PROMO_001", null, tagsOfScenario, argumentsOfScenario, this._featureTags);
#line 4
this.ScenarioInitialize(scenarioInfo);
#line hidden
            bool isScenarioIgnored = default(bool);
            bool isFeatureIgnored = default(bool);
            if ((tagsOfScenario != null))
            {
                isScenarioIgnored = tagsOfScenario.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((this._featureTags != null))
            {
                isFeatureIgnored = this._featureTags.Where(__entry => __entry != null).Where(__entry => String.Equals(__entry, "ignore", StringComparison.CurrentCultureIgnoreCase)).Any();
            }
            if ((isScenarioIgnored || isFeatureIgnored))
            {
                testRunner.SkipScenario();
            }
            else
            {
                this.ScenarioStart();
#line 7
 testRunner.When("the user navigates to the \'Promotional actions\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 8
 testRunner.And(string.Format("the user removes all promotions with description \'{0}\' and customer \'{1}\'", dESCR_NATIONAL2, pPHOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 9
 testRunner.And(string.Format("the user removes all promotions with description \'{0}\' and customer \'{1}\'", dESCR_NATIONAL, pPHOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 10
 testRunner.And("the user navigates to the \'Promo plan\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 12
 testRunner.Then("the user validates that the \'First Row\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 13
 testRunner.When(string.Format("the user filters the column by column name \'Customer Code\', \'Like\', \'{0}\'", pPHOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 14
 testRunner.And(string.Format("the user filters the column by column name \'Year of Reference\', \'Equal\', \'{0}\'", rEFYEAR), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 15
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 16
 testRunner.Then("the user validates that the Loading Mask is not present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 18
 testRunner.When(string.Format("the user creates a Promo \'{0}\' \'{1}\'", pPHOLDERLEV, pPHOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 19
 testRunner.And(string.Format("the user populates the cockpit \'{0}\' \'{1}\' \'{2}\' \'{3}\' \'{4}\' \'{5}\'", dESCR_NATIONAL, sELLINSTART, sELLINEND, sELLOUTSTART, sELLOUTEND, mECH), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 20
 testRunner.And(string.Format("the user adds a product \'{0}\' \'{1}\'", pRODLEVEL, pRODCODE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 21
 testRunner.And(string.Format("the user adds a product \'{0}\' \'{1}\'", pRODLEVEL, pRODCODE2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 22
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'Cockpit\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 23
 testRunner.And("the user retrieves text from element \'Input By Label Name\' with value \'Action Id\'" +
                        " and saves it as \'ActionId1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 24
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 25
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 26
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 29
 testRunner.And("the user navigates to the \'Promo plan\' page", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 30
 testRunner.Then("the user validates that the \'First Row\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 31
 testRunner.When(string.Format("the user filters the column by column name \'Customer Code\', \'Like\', \'{0}\'", pPHOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 32
 testRunner.And(string.Format("the user filters the column by column name \'Year of Reference\', \'Equal\', \'{0}\'", rEFYEAR), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 33
 testRunner.And("the user opens the grid item in row \'1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 35
 testRunner.Then("the user validates that the \'Loading Mask\' is not present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 36
 testRunner.When("the user clicks on \'Zoom Out Button\' until \'Year Quarter\' with value \'Q3\' and val" +
                        "ue \'1\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 37
 testRunner.And(string.Format("the user selects a period on promo plan calendar for product \'{0}\' from year \'202" +
                            "0\' quarter \'Q1\' to year \'2020\' quarter \'Q2\'", dESC), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 39
 testRunner.Then("the user validates that the \'Popup\' with value \'New Promotion\' is present", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 40
 testRunner.And("the user validates that the \'Input By Label Name\' with value \'Confirmation level\'" +
                        " is disabled", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 41
 testRunner.When("the user clicks on \'Popup Ok Button\' with value \'New Promotion\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 43
 testRunner.Then(string.Format("the user validates that \'Input By Label Name\' with value \'Customer holder\' contai" +
                            "ns text \'{0}\'", pPHOLDER), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
#line 45
 testRunner.And("the user validates that \'Validity Period Start Date\' is in quarter \'Q1\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 46
 testRunner.And("the user validates that \'Validity Period End Date\' is in quarter \'Q2\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 47
 testRunner.And("the user validates that \'Validity Period Start Date\' text contains \'2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 48
 testRunner.And("the user validates that \'Validity Period End Date\' text contains \'2020\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 50
 testRunner.When(string.Format("the user enters \'{0}\' in field \'Input By Label Name\' with value \'Description\'", dESCR_NATIONAL2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "When ");
#line hidden
#line 51
 testRunner.And("the user clicks on \'Side Panel Tab\' with value \'General info\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 52
 testRunner.And(string.Format("the user clicks on \'Mechanics CheckBox\' with value \'{0}\'", mECH), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 53
 testRunner.And(string.Format("the user adds products \'{0}\' \'{1}\'", pRODLEVEL, pRODCODE), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 54
 testRunner.And(string.Format("the user adds products \'{0}\' \'{1}\'", pRODLEVEL, pRODCODE2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 55
 testRunner.And("the user clicks on the \'Save Button\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 56
 testRunner.And("the user clicks on the \'Close Tab\'", ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "And ");
#line hidden
#line 58
 testRunner.Then(string.Format("the user validates that the \'Calendar Promo Plan\' with value \'{0}\' is present", dESCR_NATIONAL2), ((string)(null)), ((TechTalk.SpecFlow.Table)(null)), "Then ");
#line hidden
            }
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
